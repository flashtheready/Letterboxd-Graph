// This script will take a blank composition in After Effects, populate it with nulls, shapes, and text objects, and then apply keyframes based on the data in your Diary Arrays
// I kept one composition I called "pasteboard" which I would use as the destination for this script. Whenever I needed to run this script I would delete everything in pasteboard, run this script, and then copy whatever I needed from the results and paste it into whichever other comp I was working on

app.beginUndoGroup("Create bar graph");

var myComp = app.project.activeItem; // This script will target whichever composition is selected in After Effect's project panel

// Constants
var yearsTotal = 102; // I was using a dataset from 1920 - 2021
var margin = myComp.width/10;
var graphWidth = myComp.width - (margin * 2);
var barHeightUnit = 1;
var barW = 8;
var barH = 800;

// Prepping some arrays
var yearNulls = [];
var yearShapes = [];
var yearEntriesNulls = [];
var yearEntriesShapes = [];
var ratingsNulls = [];
var ratingsShapes = [];

// I used all of the convertcsvtoarray scripts to make these arrays so that they were easier to troubleshoot. Ideally these would directly read from the CSVs.

// Diary Arrays
var diaryListYear = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2010, 0, 0, 0, 0, 0, 2011, 0, 0, 1989, 0, 0, 1967, 0, 1996, 0, 1974, 0, 2016, 0, 0, 0, 0, 0, 1960, 0, 0, 0, 0, 0, 1994, 0, 0, 0, 0, 0, 1971, 0, 0, 0, 0, 0, 1966, 0, 0, 0, 0, 0, 1953, 0, 0, 2018, 0, 0, 2017, 0, 0, 0, 0, 0, 2018, 0, 0, 1999, 0, 0, 2016, 0, 0, 1967, 0, 0, 1969, 0, 0, 1982, 0, 0, 1989, 0, 0, 1999, 0, 0, 1954, 0, 0, 0, 0, 0, 1937, 0, 0, 0, 0, 0, 2016, 0, 1969, 0, 1995, 0, 1956, 0, 1946, 0, 2003, 0, 1959, 0, 0, 0, 0, 0, 1974, 0, 0, 1960, 0, 0, 1983, 0, 0, 2011, 0, 0, 2020, 0, 1953, 0, 1952, 0, 1984, 0, 1991, 0, 1954, 0, 1979, 2017, 0, 1957, 2011, 0, 1983, 0, 1971, 0, 1969, 0, 1951, 2018, 0, 1958, 2019, 0, 2019, 0, 1982, 0, 1966, 0, 1992, 1988, 1990, 1943, 2014, 0, 2003, 1953, 0, 1963, 2000, 0, 1979, 0, 1960, 0, 1985, 0, 1961, 0, 0, 1955, 0, 0, 1973, 0, 1975, 0, 1985, 0, 2019, 0, 1954, 0, 1963, 0, 1959, 0, 0, 1942, 0, 0, 1958, 1957, 0, 1959, 1979, 0, 1987, 0, 1963, 0, 1999, 0, 1974, 0, 0, 1986, 0, 0, 2014, 0, 0, 1973, 0, 0, 2012, 0, 1987, 0, 1979, 0, 1976, 1962, 1934, 1992, 2019, 0, 2016, 1957, 1966, 1994, 1946, 2003, 1978, 2019, 0, 1987, 1982, 0, 2017, 0, 0, 1981, 0, 0, 1984, 0, 0, 0, 0, 0, 2000, 1978, 0, 1939, 1977, 0, 1981, 0, 0, 0, 0, 0, 1959, 0, 0, 1965, 0, 0, 1996, 0, 1975, 0, 1972, 0, 1958, 0, 0, 1953, 0, 0, 2015, 1986, 1991, 1975, 1998, 0, 1985, 0, 2009, 0, 1936, 0, 1986, 0, 2005, 0, 1956, 0, 1997, 2018, 0, 1955, 2014, 0, 2010, 1997, 1985, 1994, 1981, 0, 1994, 1970, 0, 1940, 1948, 0, 1993, 2002, 0, 1981, 1976, 0, 1999, 2018, 1953, 1972, 1978, 1973, 2019, 2010, 0, 2013, 2004, 0, 1939, 0, 0, 0, 0, 0, 1976, 1989, 0, 1981, 1958, 0, 1973, 1947, 1983, 1943, 2013, 0, 1983, 1988, 1988, 1945, 1975, 0, 2018, 1993, 0, 2020, 1954, 0, 2011, 1993, 0, 1983, 1988, 0, 1989, 0, 0, 0, 0, 0, 1925, 0, 0, 1980, 0, 0, 1970, 0, 1958, 0, 2015, 0, 1984, 0, 1966, 0, 1970, 0, 1970, 0, 1939, 0, 1933, 0, 1994, 1928, 1932, 1921, 1921, 1970, 1932, 1921, 1961, 1965, 1980, 0, 1985, 0, 0, 1965, 0, 0, 1982, 2013, 0, 1980, 1939, 0, 1920, 0, 1955, 0, 2019, 0, 1964, 2013, 0, 1975, 1993, 0, 2018, 0, 0, 1964, 0, 0, 1971, 0, 0, 0, 0, 0, 1972, 0, 0, 0, 0, 0, 1969, 1956, 0, 1993, 1958, 0, 2003, 1921, 1996, 1968, 2000, 0, 2015, 0, 0, 1958, 0, 0, 2016, 0, 0, 1991, 0, 0, 1924, 0, 1983, 0, 1992, 0, 1995, 0, 2005, 0, 2006, 0, 2014, 1982, 0, 2005, 1941, 0, 1964, 0, 0, 0, 0, 0, 1938, 0, 0, 0, 0, 0, 1971, 1978, 0, 2017, 2000, 0, 1994, 0, 0, 1958, 0, 0, 1976, 0, 1971, 0, 1930, 0, 1988, 0, 2009, 0, 1988, 0, 1985, 0, 0, 0, 0, 0, 1966, 0, 0, 1959, 0, 0, 2020, 0, 0, 1963, 0, 0, 2011, 0, 0, 1999, 0, 0, 2018, 1954, 1988, 1960, 2005, 0, 1967, 2019, 0, 2010, 1991, 0, 2019, 2014, 0, 1991, 1961, 0, 2011, 0, 0, 0, 0, 0, 2006, 0, 0, 0, 0, 0, 2014, 0, 0, 0, 0, 0, 2011, 0, 0, 0, 0, 0, 2014, 0, 0, 2008, 0, 0, 2019, 0, 1987, 0, 2011, 0, 1922, 0, 0, 1950, 0, 0, 2019, 0, 0, 2017, 0, 0, 1992, 0, 0, 1986, 0, 0, 2020, 0, 1962, 0, 1978, 0, 1986, 0, 2015, 0, 2009, 0, 2016, 0, 0, 1950, 0, 0, 1996, 0, 1944, 0, 1992, 0, 1974, 0, 0, 1974, 0, 0, 1975, 0, 0, 1981, 0, 0, 1993, 0, 0, 0, 0, 0, 1984, 0, 0, 0, 0, 0, 2015, 0, 1981, 0, 1985, 0, 2016, 0, 0, 1996, 0, 0, 1942, 0, 0, 2018, 0, 0, 2008, 0, 1985, 0, 1962, 0, 2016, 0, 0, 1972, 0, 0, 1965, 0, 0, 0, 0, 0, 2014, 0, 0, 1984, 0, 0, 2015, 0, 0, 0, 0, 0, 1998, 0, 1982, 0, 2008, 0, 1976, 0, 0, 1962, 0, 0, 1977, 0, 2011, 0, 2008, 0, 1985, 0, 2020, 0, 1979, 0, 1931, 0, 1935, 0, 2000, 0, 1977, 0, 0, 0, 0, 0, 1987, 0, 1982, 0, 1963, 0, 2009, 0, 0, 2008, 0, 0, 1982, 2018, 0, 2017, 1946, 0, 1977, 0, 0, 1964, 0, 0, 1990, 0, 1984, 0, 2019, 0, 1997, 0, 0, 0, 0, 0, 1984, 0, 0, 2018, 0, 0, 2019, 0, 1951, 0, 1965, 0, 1955, 0, 1983, 0, 1962, 0, 2011, 0, 0, 2019, 0, 0, 1962, 2018, 0, 2017, 2013, 0, 2018, 0, 1965, 0, 1976, 0, 1962, 0, 0, 0, 0, 0, 1959, 0, 0, 2018, 0, 0, 1986, 0, 2000, 0, 1992, 0, 1942, 0, 1954, 0, 1973, 0, 2019, 0, 1978, 0, 2020, 0, 2018, 0, 0, 1987, 0, 0, 2020, 0, 0, 1970, 0, 0, 1972, 0, 0, 1969, 0, 0, 1974, 0, 2019, 0, 2015, 0, 1993, 0, 0, 1991, 0, 0, 2007, 0, 0, 1973, 0, 0, 2017, 0, 0, 0, 0, 0, 1986, 0, 1965, 0, 1961, 0, 1973, 0, 0, 0, 0, 0, 1984, 0, 1977, 0, 1969, 0, 1986, 1970, 1948, 1989, 2010, 0, 1977, 0, 0, 0, 0, 0, 2001, 0, 1988, 0, 1985, 0, 1998, 2010, 0, 1945, 1970, 0, 2002, 0, 1996, 0, 1989, 0, 2017, 0, 1988, 0, 1995, 0, 1992, 0, 1996, 0, 1974, 0, 2014, 0, 1946, 0, 2010, 0, 1996, 0, 1978, 0, 1997, 0, 1997, 0, 0, 1985, 0, 0, 1985, 0, 0, 1991, 0, 0, 1945, 0, 0, 1961, 0, 0, 2020, 0, 0, 1990, 0, 0, 2001, 0, 1927, 0, 1980, 0, 1985, 0, 0, 0, 0, 0, 2019, 0, 0, 1991, 0, 0, 2003, 0, 0, 2017, 0, 0, 1987, 0, 0, 1986, 0, 0, 1983, 0, 0, 0, 0, 0, 2020, 0, 0, 0, 0, 0, 1989, 0, 0, 2000, 0, 0, 1970, 0, 0, 1929, 0, 0, 1934, 0, 0, 1937, 0, 0, 2015, 0, 2015, 0, 1985, 0, 2018, 0, 0, 1935, 0, 0, 2018, 0, 2008, 0, 2008, 0, 1980, 0, 2005, 0, 1968, 0, 2004, 0, 1938, 0, 1955, 0, 1982, 0, 0, 0, 0, 0, 2001, 0, 1991, 0, 1941, 0, 2010, 1940, 0, 1929, 1981, 0, 2011, 1983, 0, 2019, 2020, 0, 2020, 0, 0, 1960, 0, 0, 1985, 0, 0, 1985, 0, 0, 1941, 0, 0, 1986, 0, 0, 1975, 2008, 0, 1999, 2010, 0, 1999, 0, 2018, 0, 2014, 0, 1980, 2014, 1995, 1994, 2020, 1990, 1991, 2012, 2012, 1985, 1943, 0, 2020, 0, 1991, 0, 1980, 0, 1944, 1984, 0, 2013, 2016, 0, 2013, 0, 1968, 0, 1966, 0, 1946, 0, 1975, 0, 2020, 0, 1967, 1992, 0, 1980, 1961, 0, 2005, 1990, 0, 1980, 2017, 0, 2010, 2012, 1981, 2011, 1996, 0, 1995, 0, 1985, 0, 2017, 0, 2010, 2017, 2018, 1983, 1960, 0, 1951, 0, 1954, 0, 1968, 0, 1975, 1954, 1996, 1980, 1971, 0, 2007, 2018, 2010, 2004, 1964, 0, 1977, 2016, 0, 2009, 2011, 0, 2017, 0, 1995, 0, 1979, 0, 2009, 1989, 0, 2015, 1986, 0, 2018, 2018, 2020, 1993, 1970, 1965, 1956, 2018, 0, 1958, 1922, 0, 1958, 0, 0, 2020, 0, 0, 2020, 2015, 1992, 2003, 2014, 1988, 2009, 2005, 1988, 1997, 1994, 0, 2006, 1984, 2016, 1994, 1960, 1985, 2020, 2011, 0, 1964, 1993, 0, 2018, 2018, 0, 1980, 1983, 0, 1994, 2020, 2015, 1963, 2016, 0, 1982, 1995, 0, 1974, 2008, 0, 2005, 2013, 0, 2018, 1997, 0, 1988, 1967, 2019, 2012, 1932, 0, 1991, 0, 1988, 0, 1981, 0, 2013, 1992, 2014, 1986, 1975, 2020, 1981, 1989, 1961, 2003, 1982, 0, 2020, 2019, 2018, 1948, 1957, 0, 2017, 2018, 2020, 1965, 2018, 2018, 1978, 2017, 1993, 1981, 1981, 0, 1993, 1989, 2017, 2014, 2018, 0, 2002, 1995, 1992, 1960, 2018, 0, 2018, 2020, 0, 1972, 1989, 0, 2010, 2011, 2020, 2005, 1973, 0, 2016, 0, 1979, 0, 1980, 0, 2020, 0, 2010, 0, 2018, 0, 2010, 2015, 0, 2011, 1990, 0, 1972, 1963, 0, 1957, 2017, 0, 2015, 2018, 2013, 2018, 2005, 0, 2018, 1993, 0, 2018, 2018, 0, 2016, 1992, 2015, 2012, 2017, 0, 2016, 0, 0, 1951, 0, 0, 2018, 0, 1976, 0, 1985, 0, 1995, 1990, 0, 1988, 2018, 0, 2020, 1991, 0, 1998, 1947, 0, 1977, 2020, 1999, 2014, 1960, 0, 2015, 1989, 1974, 1998, 2020, 0, 1982, 2018, 1945, 1998, 1995, 0, 1993, 0, 2000, 0, 2004, 0, 2015, 2009, 0, 2013, 2016, 0, 2020, 0, 2016, 0, 2019, 0, 1946, 0, 1976, 0, 2015, 0, 1964, 0, 2017, 0, 2020, 0, 2020, 2011, 0, 2020, 1995, 0, 2015, 0, 2020, 0, 2014, 0, 2020, 0, 0, 2019, 0, 0, 2020, 0, 0, 2007, 0, 0, 2012, 0, 2001, 0, 2020, 0, 1996, 0, 0, 0, 0, 0, 1965, 0, 0, 2018, 0, 0, 1971, 0, 1957, 0, 1990, 0, 1983, 0, 0, 2020, 0, 0, 2019, 0, 0, 2020, 0, 0, 1995, 0, 0, 1985, 0, 0, 2009, 0, 0, 0, 0, 0, 2020, 0, 0, 2016, 0, 0, 2016, 0, 0, 1987, 0, 0, 1988, 0, 0, 0, 0, 0, 1982, 0, 2019, 0, 1984, 0, 1978, 0, 0, 2020, 0, 0, 2019, 0, 0, 2020, 0, 0, 1984, 0, 0, 2017, 0, 0, 1967, 0, 0, 0, 0, 0, 2017, 0, 0, 2017, 0, 0, 1994, 0, 0, 1955, 0, 0, 1994, 0, 0, 1984, 0, 0, 2018, 0, 0, 0, 0, 0, 2017, 0, 0, 0, 0, 0, 1974, 0, 0, 2011, 0, 0, 1991, 0, 0, 0, 0, 0, 2008, 0, 0, 2014, 0, 0, 2012, 0, 0, 2015, 0, 0, 2001, 0, 0, 2020, 0, 0, 2010, 0, 0, 0, 0, 0, 2020, 0, 0, 0, 0, 0, 1989, 0, 0, 2015, 0, 0, 1987, 0, 0, 0, 0, 0, 1990, 0, 0, 0, 0, 0, 1983, 0, 0, 1958, 0, 0, 1999, 0, 0, 2020, 0, 0, 2020, 0, 0, 0, 0, 0, 2006, 0, 0, 0, 0, 0, 2020, 2013, 0, 2020, 2019, 0, 2019, 0, 0, 0, 0, 0, 2020, 0, 0, 0, 0, 0, 1990, 0, 0, 1998, 0, 0, 2005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1987, 0, 0, 2019, 0, 0, 1985, 0, 0, 2020, 0, 0, 2018, 0, 0, 2018, 0, 0, 2020, 0, 0, 0, 0, 0, 2020, 0, 1983, 0, 2020, 0, 2020, 0, 1971, 0, 2007, 0, 2020, 0, 1999, 0, 1957, 0, 2020, 0, 1982, 0, 1994, 0, 2004, 2013, 2020, 1978, 2020, 0, 2020, 0, 2020, 0, 2002, 0, 2014, 0, 0, 2018, 0, 0, 2002, 0, 1975, 0, 2020, 0, 2020, 0, 0, 2020, 0, 0, 1931, 1986, 1932, 1949, 2017, 0, 1921, 2014, 0, 1933, 2020, 0, 1935, 0, 0, 1967, 0, 0, 2020, 0, 2020, 0, 1953, 0, 2020, 0, 0, 1995, 0, 0, 1994, 0, 2014, 0, 1983, 0, 1992, 0, 0, 2008, 0, 0, 1936, 0, 0, 2020, 0, 0, 2009, 0, 0, 0, 0, 0, 2005, 0, 2009, 0, 2007, 0, 2010, 0, 0, 0, 0, 0, 2015, 0, 2015, 0, 2015, 0, 2014, 0, 1983, 0, 1989, 0, 0, 0, 0, 0, 0, 0, 1986, 0, 0, 0, 0, 0, 1939, 0, 0, 0, 0, 0, 2020, 0, 0, 0, 0, 0, 1969, 0, 0, 0, 0, 0, 2019, 0, 0, 2015, 0, 0, 2015, 0, 2020, 0, 2021, 0, 1979, 0, 1989, 0, 1981, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2018, 0, 0, 1987, 0, 0, 1988, 0, 1935, 0, 2020, 0, 1963, 0, 0, 0, 0, 0, 1987, 0, 0, 1972, 0, 0, 1958, 0, 0, 2021, 0, 0, 1940, 0, 0, 1975, 0, 0, 1940, 1951, 0, 2017, 1963, 0, 1940, 1961, 1934, 2008, 2014, 0, 2014, 0, 1992, 0, 2014, 0, 2015, 0, 2015, 0, 1969, 0, 2014, 0, 0, 1996, 0, 0, 2009, 0, 0, 2020, 0, 0, 1941, 0, 0, 1992, 0, 0, 2020, 0, 0, 0, 0, 0, 2014, 0, 2014, 0, 1961, 0, 2012, 0, 2010, 0, 2008, 0, 1999, 0, 0, 0, 0, 0, 2007, 0, 2012, 0, 2017, 0, 2012, 0, 0, 1979, 0, 0, 1942, 0, 0, 2021, 0, 0, 1956, 0, 0, 1959, 0, 0, 2007, 0, 0, 1956, 0, 0, 2011, 0, 0, 0, 0, 0, 1956, 0, 0, 2012, 0, 0, 2007, 0, 0, 1971, 0, 0, 2021, 2011, 1984, 2021, 1952, 0, 2020, 0, 0, 0, 0, 0, 1942, 2001, 0, 1956, 2002, 0, 2003, 0, 0, 2009, 0, 0, 2010, 0, 0, 0, 0, 0, 1999, 0, 0, 0, 0, 0, 2008, 0, 2005, 0, 1956, 0, 2021, 2005, 1952, 1942, 1938, 1943, 1923, 1942, 0, 1961, 2011, 0, 1991, 0, 0, 1984, 0, 0, 2003, 0, 2020, 0, 1952, 0, 1990, 0, 2009, 0, 2020, 0, 2013, 0, 2014, 0, 2020, 0, 1987, 0, 0, 1954, 0, 0, 2003, 0, 2002, 0, 1944, 0, 1949, 1943, 0, 1987, 2020, 0, 2010, 0, 0, 0, 0, 0, 2008, 0, 2009, 0, 2019, 0, 2021, 0, 0, 2020, 0, 0, 2010, 0, 2020, 0, 1989, 0, 2008, 0, 0, 1958, 0, 0, 2002, 1984, 0, 2019, 1984, 0, 0, 0, 0, 0, 0, 0, 1943, 0, 0, 1962, 0, 0, 1984, 0, 2009, 0, 1988, 0, 1979, 0, 2010, 0, 1994, 0, 2007, 1954, 0, 1999, 2021, 0, 2008, 1990, 2020, 2021, 1986, 0, 1990, 1977, 1979, 1953, 1968, 0, 1943, 2021, 2020, 1984, 2014, 0, 1944, 2020, 0, 2020, 1950, 0, 1981, 0, 0, 1985, 0, 0, 1991, 0, 0, 1968, 0, 0, 2009, 0, 0, 2010, 0, 0, 2020, 0, 2020, 0, 1990, 0, 1944, 2011, 1979, 2007, 2016, 0, 1944, 0, 1949, 0, 2019, 0, 2020, 0, 0, 0, 0, 0, 1981, 0, 0, 0, 0, 0, 1971, 0, 0, 2020, 0, 0, 1957, 0, 0, 0, 0, 0, 1946, 0, 2008, 0, 1980, 0, 1944, 0, 0, 2020, 0, 0, 2019, 2020, 0, 2019, 2001, 0, 0, 0, 0, 0, 0, 0, 2019, 0, 0, 2019, 0, 0, 1957, 0, 0, 0, 0, 0, 2020, 0, 0, 2020, 0, 0, 2020, 0, 0, 0, 0, 0, 2021, 0, 0, 2021, 0, 0, 2020, 0, 2020, 0, 2020, 0, 1981, 0, 0, 0, 0, 0, 2016, 0, 2009, 0, 1995, 0, 2006, 2010, 0, 2011, 1952, 0, 2006, 0, 0, 2007, 0, 0, 2008, 0, 2021, 0, 2009, 0, 2010, 0, 0, 0, 0, 0, 1945, 0, 2011, 0, 1983, 0, 1948, 0, 0, 2002, 0, 0, 2012, 0, 0, 0, 0, 0, 1991, 0, 0, 1996, 0, 0, 1986, 0, 0, 0, 0, 0];

var diaryListRating = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 3.5, 0, 0, 3, 0, 0, 4, 0, 3.5, 0, 4.5, 0, 4, 0, 0, 0, 0, 0, 4.5, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 4.5, 0, 0, 2, 0, 0, 4.5, 0, 0, 0, 0, 0, 2.5, 0, 0, 4.5, 0, 0, 4.5, 0, 0, 4, 0, 0, 3.5, 0, 0, 3, 0, 0, 3.5, 0, 0, 4.5, 0, 0, 3.5, 0, 0, 0, 0, 0, 4.5, 0, 0, 0, 0, 0, 4.5, 0, 0, 0, 3.5, 0, 5, 0, 4.5, 0, 5, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4.5, 0, 0, 3.5, 0, 0, 3, 0, 0, 3.5, 0, 4, 0, 5, 0, 4, 0, 4.5, 0, 5, 0, 3, 3, 0, 4, 2, 0, 3, 0, 2.5, 0, 4, 0, 3.5, 0, 0, 3.5, 2, 0, 0, 0, 3.5, 0, 5, 0, 4, 3, 3.5, 4, 4, 0, 3, 3.5, 0, 2.5, 3, 0, 3.5, 0, 4, 0, 4.5, 0, 4.5, 0, 0, 4, 0, 0, 2.5, 0, 4, 0, 3, 0, 3, 0, 5, 0, 4, 0, 3.5, 0, 0, 4, 0, 0, 5, 4, 0, 3, 4.5, 0, 2.5, 0, 4, 0, 4.5, 0, 3.5, 0, 0, 2.5, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 3.5, 0, 4, 0, 4, 4, 4.5, 3.5, 3, 0, 3.5, 5, 4.5, 4.5, 4, 3.5, 0, 3, 0, 4, 4.5, 0, 4, 0, 0, 4.5, 0, 0, 4, 0, 0, 0, 0, 0, 2, 5, 0, 5, 4.5, 0, 5, 0, 0, 0, 0, 0, 4.5, 0, 0, 4, 0, 0, 3.5, 0, 5, 0, 2.5, 0, 3, 0, 0, 5, 0, 0, 4, 3.5, 4.5, 5, 5, 0, 2, 0, 3, 0, 2.5, 0, 4, 0, 0, 0, 3, 0, 1.5, 0, 0, 4, 4.5, 0, 3.5, 4, 4, 5, 3.5, 0, 5, 0, 0, 3.5, 4, 0, 3.5, 3, 0, 4, 4, 0, 1, 4, 2, 3, 2.5, 4.5, 3.5, 2, 0, 3.5, 4.5, 0, 3, 0, 0, 0, 0, 0, 4, 3, 0, 4, 5, 0, 4.5, 3.5, 0, 5, 3.5, 0, 2, 4.5, 2.5, 5, 4.5, 0, 2, 3, 0, 1.5, 4, 0, 2.5, 2.5, 0, 4, 5, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 4.5, 0, 0, 2.5, 0, 4, 0, 2, 0, 5, 0, 5, 0, 2.5, 0, 2.5, 0, 4, 0, 5, 0, 0, 0, 0, 0, 0, 4, 0, 4, 2, 4, 4.5, 0, 5, 0, 0, 4.5, 0, 0, 3, 0, 0, 4.5, 5, 0, 0, 0, 4.5, 0, 4.5, 0, 2.5, 3, 0, 5, 2, 0, 4, 0, 0, 4, 0, 0, 4.5, 0, 0, 0, 0, 0, 3.5, 0, 0, 0, 0, 0, 2, 3.5, 0, 3.5, 4, 0, 3, 4, 3, 3.5, 5, 0, 3.5, 0, 0, 4, 0, 0, 4.5, 0, 0, 3.5, 0, 0, 4, 0, 2.5, 0, 4.5, 0, 1.5, 0, 4, 0, 4, 0, 4.5, 4.5, 0, 4, 4.5, 0, 4, 0, 0, 0, 0, 0, 2.5, 0, 0, 0, 0, 0, 5, 3, 0, 5, 4.5, 0, 4, 0, 0, 3, 0, 0, 5, 0, 4, 0, 3.5, 0, 5, 0, 3.5, 0, 3, 0, 3, 0, 0, 0, 0, 0, 4.5, 0, 0, 5, 0, 0, 4.5, 0, 0, 3, 0, 0, 2, 0, 0, 2.5, 0, 0, 3, 3.5, 3.5, 4, 4.5, 0, 3.5, 4, 0, 5, 4.5, 0, 4, 3, 0, 4, 4, 0, 1.5, 0, 0, 0, 0, 0, 2.5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4.5, 0, 0, 0, 0, 0, 3.5, 0, 0, 3.5, 0, 0, 3, 0, 4.5, 0, 3.5, 0, 4, 0, 0, 3.5, 0, 0, 3.5, 0, 0, 4.5, 0, 0, 2, 0, 0, 4, 0, 0, 2.5, 0, 4, 0, 4, 0, 3, 0, 3, 0, 4, 0, 4, 0, 0, 4, 0, 0, 3.5, 0, 4, 0, 4, 0, 3.5, 0, 0, 5, 0, 0, 4.5, 0, 0, 4, 0, 0, 3, 0, 0, 0, 0, 0, 3.5, 0, 0, 0, 0, 0, 3, 0, 3.5, 0, 3, 0, 1.5, 0, 0, 2, 0, 0, 3.5, 0, 0, 4, 0, 0, 1, 0, 4, 0, 4.5, 0, 4, 0, 0, 4, 0, 0, 3, 0, 0, 0, 0, 0, 3.5, 0, 0, 5, 0, 0, 4, 0, 0, 0, 0, 0, 2.5, 0, 4.5, 0, 4.5, 0, 2.5, 0, 0, 4, 0, 0, 1.5, 0, 3.5, 0, 4.5, 0, 3.5, 0, 4, 0, 3.5, 0, 4, 0, 4.5, 0, 5, 0, 4, 0, 0, 0, 0, 0, 3.5, 0, 2.5, 0, 4, 0, 3, 0, 0, 3, 0, 0, 2, 2.5, 0, 2, 3, 0, 3, 0, 0, 4, 0, 0, 3.5, 0, 3.5, 0, 4.5, 0, 3, 0, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0, 2.5, 0, 4, 0, 4.5, 0, 3, 0, 4.5, 0, 4.5, 0, 3.5, 0, 0, 3, 0, 0, 5, 4, 0, 3.5, 4.5, 0, 3, 0, 3, 0, 3.5, 0, 3, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 2.5, 0, 4, 0, 4, 0, 3, 0, 3.5, 0, 5, 0, 3, 0, 2.5, 0, 3, 0, 4, 0, 0, 3.5, 0, 0, 3, 0, 0, 3, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 3.5, 0, 4, 0, 3.5, 0, 0, 4.5, 0, 0, 4.5, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 2.5, 0, 4, 0, 3.5, 0, 4, 0, 0, 0, 0, 0, 3.5, 0, 4.5, 0, 4.5, 0, 3.5, 2.5, 3, 4, 4, 0, 4, 0, 0, 0, 0, 0, 4.5, 0, 5, 0, 2.5, 0, 4, 1.5, 0, 4, 2.5, 0, 3, 0, 4.5, 0, 3.5, 0, 2.5, 0, 2, 0, 3, 0, 4, 0, 2.5, 0, 3, 0, 3, 0, 4.5, 0, 2.5, 0, 4, 0, 2.5, 0, 4.5, 0, 3.5, 0, 0, 5, 0, 0, 5, 0, 0, 4.5, 0, 0, 3.5, 0, 0, 4, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 4, 0, 5, 0, 4, 0, 0, 0, 0, 0, 3, 0, 0, 3.5, 0, 0, 5, 0, 0, 3, 0, 0, 2, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 3.5, 0, 0, 3.5, 0, 0, 4, 0, 0, 2.5, 0, 0, 3, 0, 0, 4.5, 0, 0, 4, 0, 2, 0, 3, 0, 3.5, 0, 0, 4.5, 0, 0, 4, 0, 1.5, 0, 5, 0, 1.5, 0, 2.5, 0, 3.5, 0, 3.5, 0, 4, 0, 4.5, 0, 3, 0, 0, 0, 0, 0, 1, 0, 4, 0, 4, 0, 3, 4, 0, 0, 4.5, 0, 3.5, 3.5, 0, 3, 4, 0, 3, 0, 0, 4.5, 0, 0, 5, 0, 0, 2, 0, 0, 2.5, 0, 0, 3.5, 0, 0, 3.5, 3, 0, 4, 1, 0, 3, 0, 2.5, 0, 3, 0, 4, 3, 3.5, 3, 3, 4, 3, 0, 3.5, 3.5, 4, 0, 4, 0, 2.5, 0, 5, 0, 3.5, 5, 0, 2.5, 4, 0, 4.5, 0, 3.5, 0, 5, 0, 4, 0, 4.5, 0, 3, 0, 4, 4, 0, 2.5, 4.5, 0, 2, 2.5, 0, 3, 4, 0, 3.5, 2.5, 3.5, 3, 4.5, 0, 2.5, 0, 3, 0, 3.5, 0, 2.5, 4, 4, 3, 4, 0, 4, 0, 3, 0, 3.5, 0, 3, 5, 4, 2, 3, 0, 3.5, 3, 2, 4, 2, 0, 3, 3.5, 0, 2.5, 4, 0, 4, 0, 4, 0, 4.5, 0, 3.5, 2.5, 0, 3.5, 3.5, 0, 1.5, 4.5, 4, 3.5, 3, 3.5, 4, 3, 0, 4.5, 4.5, 0, 4, 0, 0, 4, 0, 0, 4, 2.5, 3, 3, 5, 4, 3.5, 2, 3.5, 3.5, 3.5, 0, 3, 4.5, 3.5, 2.5, 5, 3.5, 4, 2, 0, 4, 4, 0, 4, 3.5, 0, 4, 4.5, 0, 4, 4, 2.5, 3, 4, 0, 3, 4, 0, 4.5, 4.5, 0, 3.5, 2, 0, 3.5, 4, 0, 3.5, 4, 3.5, 4, 4, 0, 4, 0, 3.5, 0, 3, 0, 3.5, 2.5, 2, 3.5, 3, 3.5, 2, 2.5, 3, 3.5, 3, 0, 2.5, 3.5, 3.5, 4, 3, 0, 3.5, 2.5, 4.5, 5, 2, 3, 3, 3, 3.5, 3.5, 4, 0, 2, 4.5, 2, 4.5, 0, 0, 2.5, 1.5, 2.5, 4.5, 0, 0, 3, 2.5, 0, 3, 4, 0, 1.5, 2, 2.5, 4, 4, 0, 3.5, 0, 5, 0, 5, 0, 4, 0, 3.5, 0, 3.5, 0, 2, 4, 0, 2, 3.5, 0, 3, 3, 0, 4, 0, 0, 3, 3.5, 0, 4, 4.5, 0, 3, 3.5, 0, 4, 3.5, 0, 2, 3.5, 4, 0, 0, 0, 3, 0, 0, 4, 0, 0, 3, 0, 4.5, 0, 4.5, 0, 2.5, 2.5, 0, 3, 4, 0, 3.5, 3, 0, 2.5, 4.5, 0, 3, 3.5, 3, 4.5, 4, 0, 3.5, 2.5, 3, 3.5, 4, 0, 3, 0, 5, 3, 5, 0, 3.5, 0, 4, 0, 5, 0, 3, 0, 0, 4.5, 0, 0, 2, 0, 3, 0, 4, 0, 5, 0, 2, 0, 2.5, 0, 4, 0, 3.5, 0, 2.5, 0, 4, 2.5, 0, 0, 3, 0, 3, 0, 3, 0, 4, 0, 4, 0, 0, 3.5, 0, 0, 4, 0, 0, 3, 0, 0, 0, 0, 2.5, 0, 2.5, 0, 4, 0, 0, 0, 0, 0, 3, 0, 0, 4.5, 0, 0, 2, 0, 5, 0, 5, 0, 3.5, 0, 0, 2.5, 0, 0, 4.5, 0, 0, 2, 0, 0, 3, 0, 0, 5, 0, 0, 3.5, 0, 0, 0, 0, 0, 4, 0, 0, 3, 0, 0, 3, 0, 0, 3.5, 0, 0, 2.5, 0, 0, 0, 0, 0, 4, 0, 4.5, 0, 3.5, 0, 4, 0, 0, 3.5, 0, 0, 4, 0, 0, 3.5, 0, 0, 2.5, 0, 0, 0.5, 0, 0, 3.5, 0, 0, 0, 0, 0, 2.5, 0, 0, 3, 0, 0, 3.5, 0, 0, 3.5, 0, 0, 3.5, 0, 0, 3.5, 0, 0, 3, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 1.5, 0, 0, 2.5, 0, 0, 0, 0, 0, 2.5, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 2, 0, 0, 3, 0, 0, 3.5, 0, 0, 0, 0, 0, 2.5, 0, 0, 0, 0, 0, 3.5, 0, 0, 3, 0, 0, 2.5, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 4.5, 0, 0, 3, 0, 0, 3, 0, 0, 2.5, 0, 0, 4.5, 0, 0, 0, 0, 0, 3.5, 0, 0, 0, 0, 0, 4, 3, 0, 3, 4.5, 0, 3.5, 0, 0, 0, 0, 0, 3.5, 0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 3.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.5, 0, 0, 2.5, 0, 0, 2.5, 0, 0, 2.5, 0, 0, 3, 0, 0, 3.5, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 2, 0, 3, 0, 4, 0, 4.5, 0, 3, 0, 3.5, 0, 3, 0, 4.5, 0, 3, 0, 3.5, 0, 3.5, 0, 3, 2, 3, 3.5, 0, 0, 0, 0, 2.5, 0, 2.5, 0, 3.5, 0, 0, 3.5, 0, 0, 2.5, 0, 4, 0, 2, 0, 4, 0, 0, 4, 0, 0, 4, 5, 3.5, 3.5, 0, 0, 0, 0, 0, 3.5, 4, 0, 2, 0, 0, 3.5, 0, 0, 3, 0, 4, 0, 3.5, 0, 3, 0, 0, 2.5, 0, 0, 5, 0, 3.5, 0, 3.5, 0, 3, 0, 0, 3.5, 0, 0, 3, 0, 0, 3.5, 0, 0, 3.5, 0, 0, 0, 0, 0, 2, 0, 2.5, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.5, 0, 3, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 3.5, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 2, 0, 0, 3.5, 0, 0, 3, 0, 3.5, 0, 2.5, 0, 3, 0, 2.5, 0, 4.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.5, 0, 0, 4, 0, 0, 3, 0, 3.5, 0, 4, 0, 4, 0, 0, 0, 0, 0, 1.5, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 0, 3, 0, 0, 5, 0, 0, 2.5, 4.5, 0, 3.5, 3.5, 0, 3.5, 4, 2.5, 4, 0, 0, 0, 0, 3, 0, 3.5, 0, 0, 0, 4, 0, 4.5, 0, 2, 0, 0, 4, 0, 0, 1.5, 0, 0, 5, 0, 0, 2.5, 0, 0, 4, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, 0, 3.5, 0, 3, 0, 3.5, 0, 2, 0, 1, 0, 4, 0, 0, 0, 0, 0, 1.5, 0, 3, 0, 4, 0, 3.5, 0, 0, 4.5, 0, 0, 3, 0, 0, 1.5, 0, 0, 4.5, 0, 0, 5, 0, 0, 2.5, 0, 0, 4, 0, 0, 2.5, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 2, 0, 0, 3.5, 0, 0, 0, 1.5, 3, 3, 4, 0, 4, 0, 0, 0, 0, 0, 2.5, 4.5, 0, 1.5, 3.5, 0, 2.5, 0, 0, 4, 0, 0, 2.5, 0, 0, 0, 0, 0, 3.5, 0, 0, 0, 0, 0, 2, 0, 2.5, 0, 4, 0, 0, 3, 0, 4.5, 0, 0, 0, 2, 0, 0, 4, 0, 2, 0, 0, 4.5, 0, 0, 2, 0, 3, 0, 4, 0, 4, 0, 2, 0, 0, 0, 1, 0, 2, 0, 3.5, 0, 4, 0, 0, 3, 0, 0, 3.5, 0, 4, 0, 4, 0, 0, 3, 0, 3, 3, 0, 4.5, 0, 0, 0, 0, 0, 4, 0, 2.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 2, 0, 5, 0, 2, 0, 0, 2, 0, 0, 1.5, 3.5, 0, 0, 3.5, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0, 3, 0, 1.5, 0, 3.5, 0, 2.5, 0, 3, 0, 5, 0, 3, 5, 0, 4, 2.5, 0, 2.5, 3, 0, 2.5, 3.5, 0, 2.5, 3, 2.5, 4.5, 0, 0, 3, 3.5, 4.5, 3.5, 4.5, 0, 3, 3, 0, 0, 3.5, 0, 3, 0, 0, 4.5, 0, 0, 3, 0, 0, 3.5, 0, 0, 0.5, 0, 0, 2, 0, 0, 2.5, 0, 0, 0, 4, 0, 2.5, 3, 3, 4, 3.5, 0, 4, 0, 3, 0, 2.5, 0, 4, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 3.5, 0, 0, 3.5, 0, 0, 4.5, 0, 0, 0, 0, 0, 2, 0, 2, 0, 3.5, 0, 2.5, 0, 0, 2.5, 0, 0, 0, 2, 0, 2, 5, 0, 0, 0, 0, 0, 0, 0, 2.5, 0, 0, 2.5, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 3.5, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 3, 0, 3, 0, 4, 0, 4, 0, 0, 0, 0, 0, 3.5, 0, 3, 0, 3.5, 0, 3.5, 3, 0, 2, 4.5, 0, 3, 0, 0, 3, 0, 0, 2.5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 3, 0, 2, 0, 3, 0, 4, 0, 0, 4, 0, 0, 2.5, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0];

var diaryListRewatch

var diaryListYearTotal = [1, 0, 2, 1, 3, 3, 1, 3, 2, 3, 1, 4, 5, 4, 4, 5, 5, 3, 4, 8, 11, 8, 10, 7, 8, 4, 7, 2, 7, 5, 7, 7, 7, 10, 10, 11, 10, 11, 13, 11, 12, 11, 10, 10, 12, 12, 10, 15, 12, 12, 12, 15, 14, 15, 15, 15, 14, 15, 17, 18, 18, 22, 25, 25, 27, 30, 29, 29, 32, 33, 33, 34, 37, 41, 45, 51, 51, 55, 59, 56, 59, 58, 62, 67, 63, 58, 58, 58, 58, 58, 58, 58, 58, 64, 64, 67, 73, 89, 93, 121, 99, 13];

var diaryListCountTotal = [1, 0, 2, 1, 1, 1, 0, 1, 1, 2, 1, 2, 4, 2, 3, 4, 2, 2, 3, 4, 5, 4, 8, 7, 7, 4, 6, 2, 4, 3, 3, 5, 5, 7, 8, 6, 9, 6, 12, 6, 8, 10, 6, 9, 8, 10, 5, 7, 6, 8, 10, 9, 8, 8, 10, 10, 8, 9, 10, 10, 12, 17, 13, 17, 16, 19, 16, 14, 17, 15, 13, 17, 15, 13, 12, 13, 13, 7, 7, 12, 6, 6, 9, 10, 5, 14, 4, 11, 19, 19, 25, 24, 13, 14, 25, 27, 21, 27, 46, 33, 95, 13];

var diaryListTitles = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "Meek's Cutoff" , " ", " ", " ", " ", " ", "Hugo" , " ", " ", "Driving Miss Daisy" , " ", " ", "Guess Who's Coming to Dinner" , " ", "Swingers" , " ", "Ali: Fear Eats the Soul" , " ", "Paterson" , " ", " ", " ", " ", " ", "L'Avventura" , " ", " ", " ", " ", " ", "Natural Born Killers" , " ", " ", " ", " ", " ", "Billy Jack" , " ", " ", " ", " ", " ", "Persona" , " ", " ", " ", " ", " ", "The Wages of Fear" , " ", " ", "Aquaman" , " ", " ", "The Square" , " ", " ", " ", " ", " ", "Bohemian Rhapsody" , " ", " ", "The Virgin Suicides" , " ", " ", "My Life as a Zucchini" , " ", " ", "The Dirty Dozen" , " ", " ", "Salesman" , " ", " ", "The King of Comedy" , " ", " ", "Say Anything..." , " ", " ", "Magnolia" , " ", " ", "Journey to Italy" , " ", " ", " ", " ", " ", "Grand Illusion" , " ", " ", " ", " ", " ", "I, Daniel Blake" , " ", "The Color of Pomegranates" , " ", "Dead Man" , " ", "A Man Escaped" , " ", "A Day in the Country" , " ", "Memories of Murder" , " ", "Pickpocket" , " ", " ", " ", " ", " ", "The Conversation" , " ", " ", "La Dolce Vita" , " ", " ", "Videodrome" , " ", " ", "Tinker Tailor Soldier Spy" , " ", " ", "Onward" , " ", "Roman Holiday" , " ", "Ikiru" , " ", "The Natural" , " ", "Daughters of the Dust" , " ", "Seven Samurai" , " ", "The Muppet Movie" , "The Death of Stalin" , " ", "Throne of Blood" , "Bridesmaids" , " ", "Risky Business" , " ", "Dirty Harry" , " ", "True Grit" , " ", "Ace in the Hole" , "Avengers: Infinity War" , " ", "The Hidden Fortress" , "Godzilla: King of the Monsters" , " ", "Avengers: Endgame" , " ", "The Verdict" , " ", "Au Hasard Balthazar" , " ", "Hard Boiled" , "Mississippi Burning" , "Misery" , "The Life and Death of Colonel Blimp" , "Paddington" , " ", "Mystic River" , "The Big Heat" , " ", "The Sword in the Stone" , "Barking Dogs Never Bite" , " ", "Manhattan" , " ", "The Bad Sleep Well" , " ", "Tampopo" , " ", "Yojimbo" , " ", " ", "The Night of the Hunter" , " ", " ", "The Wicker Man" , " ", "Jeanne Dielman, 23, Quai du Commerce 1080 Bruxelles" , " ", "Police Story" , " ", "Good Boys" , " ", "Godzilla" , " ", "High and Low" , " ", "Anatomy of a Murder" , " ", " ", "The Magnificent Ambersons" , " ", " ", "Invention for Destruction" , "Paths of Glory" , " ", "House on Haunted Hill" , "Kramer vs. Kramer" , " ", "Bad Taste" , " ", "Charade" , " ", "Bringing Out the Dead" , " ", "Thunderbolt and Lightfoot" , " ", " ", "Highlander" , " ", " ", "Love & Mercy" , " ", " ", "Touki Bouki" , " ", " ", "The Perks of Being a Wallflower" , " ", "La Bamba" , " ", "Star Trek: The Motion Picture" , " ", "The Man Who Fell to Earth" , "Dr. No" , "L'Atalante" , "Minbo: the Gentle Art of Japanese Extortion" , "Wonder Park" , " ", "Captain Fantastic" , "Sweet Smell of Success" , "A Man for All Seasons" , "Hoop Dreams" , "The Big Sleep" , "The Triplets of Belleville" , "The Last Waltz" , "Always Be My Maybe" , " ", "Moonstruck" , "Fanny and Alexander" , " ", "The Meyerowitz Stories (New and Selected)" , " ", " ", "Gallipoli" , " ", " ", "The NeverEnding Story" , " ", " ", " ", " ", " ", "Wonder Boys" , "Gates of Heaven" , " ", "Stagecoach" , "House" , " ", "The Decline of Western Civilization" , " ", " ", " ", " ", " ", "Imitation of Life" , " ", " ", "Red Beard" , " ", " ", "Jerry Maguire" , " ", "Barry Lyndon" , " ", "Avanti!" , " ", "The Big Country" , " ", " ", "Tokyo Story" , " ", " ", "Steve Jobs" , "She's Gotta Have It" , "Thelma & Louise" , "Jaws" , "After Life" , " ", "Witness" , " ", "Julie & Julia" , " ", "Mr. Deeds Goes to Town" , " ", "The Money Pit" , " ", "Jarhead" , " ", "Around the World in Eighty Days" , " ", "Kiss the Girls" , "Shirkers" , " ", "Marty" , "Mommy" , " ", "The Kids Are All Right" , "Perfect Blue" , "Out of Africa" , "Chungking Express" , "Friday the 13th Part 2" , " ", "Chungking Express" , "Gimme Shelter" , " ", "The Thief of Bagdad" , "The Red Shoes" , " ", "What's Eating Gilbert Grape" , "The Hours" , " ", "Southern Comfort" , "The Town That Dreaded Sundown" , " ", "Cruel Intentions" , "Caroline" , "Fear and Desire" , "Bad Company" , "Goin' South" , "Paper Moon" , "Bad Education" , "Dinner for Schmucks" , " ", "Short Term 12" , "Nobody Knows" , " ", "Of Mice and Men" , " ", " ", " ", " ", " ", "News from Home" , "Parents" , " ", "Escape from New York" , "Touch of Evil" , " ", "The Sting" , "The Lady from Shanghai" , "Sans Soleil" , "Meshes of the Afternoon" , "Coda" , " ", "Easy Money" , "Prince - Sign o' the Times" , "Slugs" , "Brief Encounter" , "Dersu Uzala" , " ", "Overlord" , "True Romance" , " ", "The Wrong Missy" , "Sansho the Bailiff" , " ", "Pirates of the Caribbean: On Stranger Tides" , "Benny & Joon" , " ", "Christine" , "Cinema Paradiso" , " ", "Sex, Lies, and Videotape" , " ", " ", " ", " ", " ", "Seven Chances" , " ", " ", "Kagemusha" , " ", " ", "Rio Lobo" , " ", "A Night to Remember" , " ", "The Danish Girl" , " ", "Amadeus" , " ", "The Good, the Bad and the Ugly" , " ", "The Out-of-Towners" , " ", "The Aristocats" , " ", "Only Angels Have Wings" , " ", "Zero for Conduct" , " ", "Satantango" , "Steamboat Willie" , "Babes in the Woods" , "Magic Roses" , "The Frog" , "Five Easy Pieces" , "Santa's Workshop" , "A Dog's Life" , "Blue Hawaii" , "Bunny Lake Is Missing" , "Nine to Five" , " ", "Ran" , " ", " ", "Repulsion" , " ", " ", "An Officer and a Gentleman" , "Lumiere's First Picture Shows" , " ", "Atlantic City" , "The Rules of the Game" , " ", "The Cabinet of Dr. Caligari" , " ", "Rififi" , " ", "Uncut Gems" , " ", "Mary Poppins" , "Saving Mr. Banks" , " ", "Grey Gardens" , "Demolition Man" , " ", "Minding the Gap" , " ", " ", "Fail Safe" , " ", " ", "McCabe & Mrs. Miller" , " ", " ", " ", " ", " ", "Fritz the Cat" , " ", " ", " ", " ", " ", "Bob & Carol & Ted & Alice" , "Bob le Flambeur" , " ", "The Piano" , "Mon Oncle" , " ", "Cold Mountain" , "The Rink" , "Escape from L.A." , "Barbarella" , "In the Mood for Love" , " ", "Trumbo" , " ", " ", "Elevator to the Gallows" , " ", " ", "13th" , " ", " ", "Cape Fear" , " ", " ", "Greed" , " ", "The Dead Zone" , " ", "Malcolm X" , " ", "Species" , " ", "No Direction Home: Bob Dylan" , " ", "Inside Man" , " ", "Selma" , "Gandhi" , " ", "Caché" , "The Lady Eve" , " ", "A Fistful of Dollars" , " ", " ", " ", " ", " ", "You Can't Take It with You" , " ", " ", " ", " ", " ", "A Well Spent Life" , "Heaven Can Wait" , " ", "LA 92" , "George Washington" , " ", "Four Weddings and a Funeral" , " ", " ", "Le Beau Serge" , " ", " ", "Harlan County U.S.A." , " ", "Duck, You Sucker" , " ", "All Quiet on the Western Front" , " ", "The Thin Blue Line" , " ", "Grey Gardens" , " ", "Twins" , " ", "Sweet Dreams" , " ", " ", " ", " ", " ", "Blow-Up" , " ", " ", "Hiroshima Mon Amour" , " ", " ", "Da 5 Bloods" , " ", " ", "The Leopard" , " ", " ", "The Green Hornet" , " ", " ", "The Thomas Crown Affair" , " ", " ", "Vice" , "The Vanishing Prairie" , "Bull Durham" , "Breathless" , "Grizzly Man" , " ", "Barefoot in the Park" , "There's Something in the Water" , " ", "Who Killed Captain Alex?" , "Raise the Red Lantern" , " ", "The Inventor: Out for Blood in Silicon Valley" , "She's Beautiful When She's Angry" , " ", "My Own Private Idaho" , "Last Year at Marienbad" , " ", "The Adventures of Tintin" , " ", " ", " ", " ", " ", "The Lake House" , " ", " ", " ", " ", " ", "I, Frankenstein" , " ", " ", " ", " ", " ", "Undefeated" , " ", " ", " ", " ", " ", "The Theory of Everything" , " ", " ", "Ip Man" , " ", " ", "Crawl" , " ", "Hollywood Shuffle" , " ", "The Help" , " ", "Häxan" , " ", " ", "The Asphalt Jungle" , " ", " ", "Miles Davis: Birth of the Cool" , " ", " ", "Phantom Thread" , " ", " ", "Raising Cain" , " ", " ", "Little Shop of Horrors" , " ", " ", "Eurovision Song Contest: The Story of Fire Saga" , " ", "Jules and Jim" , " ", "Thank God It's Friday" , " ", "Flight of the Navigator" , " ", "Mississippi Grind" , " ", "Daddy Longlegs" , " ", "Into the Inferno" , " ", " ", "The Young and the Damned" , " ", " ", "The English Patient" , " ", "A Canterbury Tale" , " ", "Death Becomes Her" , " ", "The Towering Inferno" , " ", " ", "Hearts and Minds" , " ", " ", "Dog Day Afternoon" , " ", " ", "Blow Out" , " ", " ", "The Firm" , " ", " ", " ", " ", " ", "All of Me" , " ", " ", " ", " ", " ", "Winning: The Racing Life of Paul Newman" , " ", "Clash of the Titans" , " ", "Prizzi's Honor" , " ", "Star Trek Beyond" , " ", " ", "Broken Arrow" , " ", " ", "The Pride of the Yankees" , " ", " ", "Wild Rose" , " ", " ", "Day of the Dead" , " ", "Explorers" , " ", "Cléo from 5 to 7" , " ", "Florence Foster Jenkins" , " ", " ", "Pink Flamingos" , " ", " ", "West and Soda" , " ", " ", " ", " ", " ", "Frank" , " ", " ", "Amadeus" , " ", " ", "Crimson Peak" , " ", " ", " ", " ", " ", "Mighty Joe Young" , " ", "Poltergeist" , " ", "Love Exposure" , " ", "Eaten Alive" , " ", " ", "Vivre Sa Vie" , " ", " ", "Pete's Dragon" , " ", "Killer Joe" , " ", "Still Walking" , " ", "Flesh + Blood" , " ", "Palm Springs" , " ", "Phantasm" , " ", "Frankenstein" , " ", "The Bride of Frankenstein" , " ", "In the Mood for Love" , " ", "The Battle Wizard" , " ", " ", " ", " ", " ", "The Running Man" , " ", "Friday the 13th Part III" , " ", "Contempt" , " ", "The Secret of Kells" , " ", " ", "Valkyrie" , " ", " ", "Q" , "Behind the Curve" , " ", "The Circle" , "My Darling Clementine" , " ", "The Incredible Melting Man" , " ", " ", "Band of Outsiders" , " ", " ", "Miami Blues" , " ", "Friday the 13th: The Final Chapter" , " ", "EXIT" , " ", "Fireworks" , " ", " ", " ", " ", " ", "Amadeus" , " ", " ", "The Predator" , " ", " ", "Midway" , " ", "The River" , " ", "Pierrot le Fou" , " ", "Godzilla Raids Again" , " ", "The Right Stuff" , " ", "An Autumn Afternoon" , " ", "Jeff, Who Lives at Home" , " ", " ", "Glass" , " ", " ", "An Autumn Afternoon" , "Hale County This Morning, This Evening" , " ", "AlphaGo" , "Like Father, Like Son" , " ", "Mirai" , " ", "Alphaville" , " ", "The Omen" , " ", "L'Eclisse" , " ", " ", " ", " ", " ", "Good Morning" , " ", " ", "Us and Them" , " ", " ", "Top Gun" , " ", "Lucky Numbers" , " ", "Stay Tuned" , " ", "The Battle of Midway" , " ", "Johnny Guitar" , " ", "The Exorcist" , " ", "Motherless Brooklyn" , " ", "Attack of the Killer Tomatoes!" , " ", "Host" , " ", "Border" , " ", " ", "A Taxing Woman" , " ", " ", "An American Pickle" , " ", " ", "Joe" , " ", " ", "Fist of Fury" , " ", " ", "Boy" , " ", " ", "Black Christmas" , " ", "Child's Play" , " ", "Sweet Bean" , " ", "And the Band Played On" , " ", " ", "Naked Lunch" , " ", " ", "The Assassination of Jesse James by the Coward Robert Ford" , " ", " ", "Don't Look Now" , " ", " ", "Icarus" , " ", " ", " ", " ", " ", "Friday the 13th Part VI: Jason Lives" , " ", "For a Few Dollars More" , " ", "Through a Glass Darkly" , " ", "The Mother and the Whore" , " ", " ", " ", " ", " ", "Nausicaä of the Valley of the Wind" , " ", "Eraserhead" , " ", "Funeral Parade of Roses" , " ", "Castle in the Sky" , "Equinox" , "Spring in a Small Town" , "Tetsuo: The Iron Man" , "Four Lions" , " ", "Sorcerer" , " ", " ", " ", " ", " ", "Y Tu Mamá También" , " ", "My Neighbor Totoro" , " ", "Teen Wolf" , " ", "Ringu" , "A Nightmare on Elm Street" , " ", "Children of Paradise" , "Beyond the Valley of the Dolls" , " ", "Igby Goes Down" , " ", "Bound" , " ", "Kiki's Delivery Service" , " ", "Brawl in Cell Block 99" , " ", "Biloxi Blues" , " ", "Fallen Angels" , " ", "Porco Rosso" , " ", "The Frighteners" , " ", "California Split" , " ", "The One I Love" , " ", "A Matter of Life and Death" , " ", "The Town" , " ", "Paradise Lost: The Child Murders at Robin Hood Hills" , " ", "Superman" , " ", "Princess Mononoke" , " ", "The Devil's Advocate" , " ", " ", "Mishima: A Life in Four Chapters" , " ", " ", "Mishima: A Life in Four Chapters" , " ", " ", "A Brighter Summer Day" , " ", " ", "Detour" , " ", " ", "The Hustler" , " ", " ", "Birds of Prey (and the Fantabulous Emancipation of One Harley Quinn)" , " ", " ", "Days of Being Wild" , " ", " ", "Spirited Away" , " ", "The Lodger: A Story of the London Fog" , " ", "The Elephant Man" , " ", "After Hours" , " ", " ", " ", " ", " ", "Doctor Sleep" , " ", " ", "Delicatessen" , " ", " ", "Los Angeles Plays Itself" , " ", " ", "Mudbound" , " ", " ", "White of the Eye" , " ", " ", "Blue Velvet" , " ", " ", "Bless Their Little Hearts" , " ", " ", " ", " ", " ", "I'm Thinking of Ending Things" , " ", " ", " ", " ", " ", "Bill & Ted's Excellent Adventure" , " ", " ", "U-571" , " ", " ", "Patton" , " ", " ", "Blackmail" , " ", " ", "The Man Who Knew Too Much" , " ", " ", "Make Way for Tomorrow" , " ", " ", "Best of Enemies" , " ", "Jupiter Ascending" , " ", "Once Bitten" , " ", "The House That Jack Built" , " ", " ", "The 39 Steps" , " ", " ", "American Animals" , " ", "Journey to the Center of the Earth" , " ", "Wendy and Lucy" , " ", "Popeye" , " ", "Fun with Dick and Jane" , " ", "Profound Desires of the Gods" , " ", "Howl's Moving Castle" , " ", "The Lady Vanishes" , " ", "Rebel Without a Cause" , " ", "Eating Raoul" , " ", " ", " ", " ", " ", "Moulin Rouge!" , " ", "JFK" , " ", "How Green Was My Valley" , " ", "Morning Glory" , "Rebecca" , " ", "Un Chien Andalou" , "Ragtime" , " ", "Crazy, Stupid, Love." , "The Outsiders" , " ", "Alita: Battle Angel" , "The Devil All the Time" , " ", "The Lovebirds" , " ", " ", "Inherit the Wind" , " ", " ", "Shoah" , " ", " ", "Commando" , " ", " ", "Suspicion" , " ", " ", "The Color of Money" , " ", " ", "Cooley High" , "Ponyo" , " ", "Beau Travail" , "Resident Evil: Afterlife" , " ", "Any Given Sunday" , " ", "Bumblebee" , " ", "Obvious Child" , " ", "Airplane!" , "The Search for General Tso" , "Living in Oblivion" , "Swimming with Sharks" , "The Way Back" , "Close-Up" , "The Last Boy Scout" , "Curfew" , "The Impossible" , "Day of the Dead" , "Shadow of a Doubt" , " ", "Crip Camp: A Disability Revolution" , " ", "Regarding Henry" , " ", "The Blues Brothers" , " ", "Lifeboat" , "Streetwise" , " ", "The Wolverine" , "Hacksaw Ridge" , " ", "The Wind Rises" , " ", "Funny Girl" , " ", "Andrei Rublev" , " ", "Notorious" , " ", "Mirror" , " ", "#Alive" , " ", "Dont Look Back" , "A Few Good Men" , " ", "Private Benjamin" , "The Children's Hour" , " ", "Madagascar" , "House Party" , " ", "Dressed to Kill" , "Loving Vincent" , " ", "Tangled" , "The Comedy" , "Body Heat" , "Bad Teacher" , "The Watermelon Woman" , " ", "Hackers" , " ", "Lifeforce" , " ", "Happy Death Day" , " ", "Devil" , "Please Stand By" , "The Miseducation of Cameron Post" , "Born in Flames" , "Eyes Without a Face" , " ", "Strangers on a Train" , " ", "Dial M for Murder" , " ", "Hour of the Wolf" , " ", "Trilogy of Terror" , "Rear Window" , "The People vs. Larry Flynt" , "Maniac" , "The Omega Man" , " ", "Michael Clayton" , "Green Book" , "The Shrine" , "Saving Face" , "The Horror of Party Beach" , " ", "Smokey and the Bandit" , "Lo and Behold: Reveries of the Connected World" , " ", "The House of the Devil" , "Attack the Block" , " ", "The Breadwinner" , " ", "Tales from the Hood" , " ", "Stalker" , " ", "The Princess and the Frog" , "Road House" , " ", "De Palma" , "The Texas Chainsaw Massacre 2" , " ", "A Wrinkle in Time" , "Thunder Road" , "The Half of It" , "M. Butterfly" , "Valerie and Her Week of Wonders" , "Planet of the Vampires" , "The Man Who Knew Too Much" , "Summer of 84" , " ", "Vertigo" , "Nosferatu" , " ", "The Blob" , " ", " ", "The Invisible Man" , " ", " ", "My Octopus Teacher" , "Into the Forest" , "In the Soup" , "The Haunted Mansion" , "Whiplash" , "Brain Damage" , "This Is It" , "Constantine" , "Stand and Deliver" , "Wishmaster" , "River of Grass" , " ", "The Queen" , "The Times of Harvey Milk" , "Hidden Figures" , "Death Machine" , "Psycho" , "Re-Animator" , "David Attenborough: A Life on Our Planet" , "War Horse" , " ", "A Hard Day's Night" , "Cronos" , " ", "Skate Kitchen" , "Creed II" , " ", "Altered States" , "Scarface" , " ", "Love on Delivery" , "The Trial of the Chicago 7" , "The Final Girls" , "The Birds" , "The World of Us" , " ", "Basket Case" , "Rumble in the Bronx" , " ", "Lenny" , "Let the Right One In" , " ", "Munich" , "Oculus" , " ", "Cam" , "Cure" , " ", "Hellbound: Hellraiser II" , "Portrait of Jason" , "Horror Noire: A History of Black Horror" , "Killing Them Softly" , "Vampyr" , " ", "The Fisher King" , " ", "Elvira, Mistress of the Dark" , " ", "My Bloody Valentine" , " ", "Rewind This!" , "The Hand that Rocks the Cradle" , "As Above, So Below" , "Heavy Metal Parking Lot" , "Picnic at Hanging Rock" , "Borat Subsequent Moviefilm" , "Porky's" , "Turner & Hooch" , "The Pit and the Pendulum" , "Save the Green Planet!" , "The Slumber Party Massacre" , " ", "Roald Dahl's The Witches" , "Yes, God, Yes" , "Apostle" , "Key Largo" , "Plan 9 from Outer Space" , " ", "The Ritual" , "Hearts Beat Loud" , "David Byrne's American Utopia" , "Doctor Zhivago" , "Animal Behaviour" , "One Small Step" , "Piranha" , "Professor Marston and the Wonder Women" , "Body Bags" , "Scanners" , "Modern Romance" , " ", "Leprechaun" , "My Left Foot: The Story of Christy Brown" , "Cargo" , "A Girl Walks Home Alone at Night" , "Fauve" , " ", "Changing Lanes" , "Ice Cream Man" , "Lethal Weapon 3" , "Peeping Tom" , "Period. End of Sentence." , " ", "Christopher Robin" , "The Glorias" , " ", "The Last House on the Left" , "Society" , " ", "The Reef" , "Margin Call" , "Tremors: Shrieker Island" , "Me and You and Everyone We Know" , "Soylent Green" , " ", "Lion" , " ", "Alien" , " ", "The Shining" , " ", "Never Rarely Sometimes Always" , " ", "I'm Still Here" , " ", "Cold War" , " ", "Easy A" , "Carol" , " ", "The Descendants" , "Dick Tracy" , " ", "The Candidate" , "From Russia with Love" , " ", "Funny Face" , "Lou" , " ", "The Peanuts Movie" , "Three Identical Strangers" , "Mr Hublot" , "They'll Love Me When I'm Dead" , "Brokeback Mountain" , " ", "Andre the Giant" , "Menace II Society" , " ", "What She Said: The Art of Pauline Kael" , "Upgrade" , " ", "The Fundamentals of Caring" , "Mom and Dad Save the World" , "Mustang" , "Maggie Simpson in The Longest Daycare" , "Garden Party" , " ", "Miss Sloane" , " ", " ", "Early Summer" , " ", " ", "Hotel Mumbai" , " ", "Mikey and Nicky" , " ", "Tampopo" , " ", "Tank Girl" , "RoboCop 2" , " ", "Midnight Run" , "Long Day's Journey Into Night" , " ", "Disclosure" , "A Brief History of Time" , " ", "U.S. Marshals" , "Black Narcissus" , " ", "The Hobbit" , "Class Action Park" , "The Hurricane" , "Ex Machina" , "When a Woman Ascends the Stairs" , " ", "Amy" , "Uncle Buck" , "Gone in 60 Seconds" , "The Quiet Family" , "His House" , " ", "Star Trek II: The Wrath of Khan" , "Lifeboat" , "Brief Encounter" , "Ronin" , "Before Sunrise" , " ", "The Fugitive" , " ", "Joint Security Area" , " ", "Before Sunset" , " ", "Bridge of Spies" , "The Gruffalo" , " ", "Before Midnight" , "After Before" , " ", "Dolittle" , " ", "Better Watch Out" , " ", "First Cow" , " ", "It's a Wonderful Life" , " ", "King Kong" , " ", "American Ultra" , " ", "Goldfinger" , " ", "Molly's Game" , " ", "Crazy, Not Insane" , " ", "Dick Johnson Is Dead" , "The Ides of March" , " ", "The Lego Star Wars Holiday Special" , "Johnny Mnemonic" , " ", "Drunk Stoned Brilliant Dead: The Story of the National Lampoon" , " ", "The Princess Switch: Switched Again" , " ", "Gone Girl" , " ", "Mangrove" , " ", " ", "Wade in the Water" , " ", " ", "Fireball: Visitors From Darker Worlds" , " ", " ", "Before the Devil Knows You're Dead" , " ", " ", "Kings Point" , " ", "The Score" , " ", "Underwater" , " ", "When We Were Kings" , " ", " ", " ", " ", " ", "Thunderball" , " ", " ", "Thunder Road" , " ", " ", "Diamonds Are Forever" , " ", "12 Angry Men" , " ", "Home Alone" , " ", "Tender Mercies" , " ", " ", "Hillbilly Elegy" , " ", " ", "1917" , " ", " ", "American Murder: The Family Next Door" , " ", " ", "Crimson Tide" , " ", " ", "Mishima: A Life in Four Chapters" , " ", " ", "The Wild and Wonderful Whites of West Virginia" , " ", " ", " ", " ", " ", "LA Originals" , " ", " ", "Midnight Special" , " ", " ", "Patriots Day" , " ", " ", "Dirty Dancing" , " ", " ", "Working Girl" , " ", " ", " ", " ", " ", "E.T. the Extra-Terrestrial" , " ", "Sound of Metal" , " ", "Romancing the Stone" , " ", "Days of Heaven" , " ", " ", "Lovers Rock" , " ", " ", "Get Duked!" , " ", " ", "Mank" , " ", " ", "Children of the Corn" , " ", " ", "Governor Gabbi" , " ", " ", "You Only Live Twice" , " ", " ", " ", " ", " ", "The Feels" , " ", " ", "Bombshell: The Hedy Lamarr Story" , " ", " ", "The Madness of King George" , " ", " ", "Bad Day at Black Rock" , " ", " ", "Crooklyn" , " ", " ", "Blood Simple" , " ", " ", "Spider Mites of Jesus: The Dirtwoman Documentary" , " ", " ", " ", " ", " ", "Hostiles" , " ", " ", " ", " ", " ", "The Parallax View" , " ", " ", "The Iron Lady" , " ", " ", "Robin Hood: Prince of Thieves" , " ", " ", " ", " ", " ", "Sunshine Cleaning" , " ", " ", "The Skeleton Twins" , " ", " ", "Lawless" , " ", " ", "Louder Than Bombs" , " ", " ", "Frailty" , " ", " ", "Extraction" , " ", " ", "Rare Exports: A Christmas Tale" , " ", " ", " ", " ", " ", "Jingle Jangle: A Christmas Journey" , " ", " ", " ", " ", " ", "Glory" , " ", " ", "Eddie the Eagle" , " ", " ", "Less than Zero" , " ", " ", " ", " ", " ", "Quigley Down Under" , " ", " ", " ", " ", " ", "A Christmas Story" , " ", " ", "Indiscreet" , " ", " ", "The Hurricane" , " ", " ", "The Midnight Sky" , " ", " ", "Soul" , " ", " ", " ", " ", " ", "Old Joy" , " ", " ", " ", " ", " ", "Time" , "Lenny Cooke" , " ", "Run" , "Bacurau" , " ", "David Bowie: Finding Fame" , " ", " ", " ", " ", " ", "The Painter and the Thief" , " ", " ", " ", " ", " ", "The Hunt for Red October" , " ", " ", "The Thin Red Line" , " ", " ", "The Matador" , " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "The Untouchables" , " ", " ", "Once Were Brothers: Robbie Robertson and The Band" , " ", " ", "A Nightmare on Elm Street Part 2: Freddy's Revenge" , " ", " ", "Happiest Season" , " ", " ", "A Star Is Born" , " ", " ", "Kusama : Infinity" , " ", " ", "Another Round" , " ", " ", " ", " ", " ", "John Lewis: Good Trouble" , " ", "Screwballs" , " ", "Tenet" , " ", "Beastie Boys Story" , " ", "McCabe & Mrs. Miller" , " ", "Into the Wild" , " ", "Wolfwalkers" , " ", "The Insider" , " ", "The Bridge on the River Kwai" , " ", "Wonder Woman 1984" , " ", "The Best Little Whorehouse in Texas" , " ", "Eat Drink Man Woman" , " ", "The Rise & Fall of Penn Station" , "Gimme Shelter" , "The Speed Cubers" , "The 36th Chamber of Shaolin" , "Burrow" , " ", "Canvas" , " ", "Project Power" , " ", "24 Hour Party People" , " ", "A Most Violent Year" , " ", " ", "Blindspotting" , " ", " ", "Bend It Like Beckham" , " ", "Eadweard Muybridge, Zoopraxographer" , " ", "Gretel & Hansel" , " ", "One Night in Miami..." , " ", " ", "Promising Young Woman" , " ", " ", "Dracula" , "Jimi Plays Monterey" , "The Mummy" , "Stray Dog" , "Jimi Could Have Fallen from the Sky" , " ", "The Astronomer's Dream" , "A Single Life" , " ", "The Invisible Man" , "Kajillionaire" , " ", "Werewolf of London" , " ", " ", "A Colt Is My Passport" , " ", " ", "Ma Rainey's Black Bottom" , " ", "Rising Phoenix" , " ", "Beat the Devil" , " ", "Save Yourselves!" , " ", " ", "The American President" , " ", " ", "Chungking Express" , " ", "Life Itself" , " ", "Meantime" , " ", "School Ties" , " ", " ", "The Brothers Bloom" , " ", " ", "Dracula's Daughter" , " ", " ", "The Wolf of Snow Hollow" , " ", " ", "Cloudy with a Chance of Meatballs" , " ", " ", " ", " ", " ", "Waiting..." , " ", "The Taking of Pelham 1 2 3" , " ", "Secret Sunshine" , " ", "It's Kind of a Funny Story" , " ", " ", " ", " ", " ", "Riley's First Date?" , " ", "Sanjay's Super Team" , " ", "Beasts of No Nation" , " ", "Life After Beth" , " ", "Eddie Murphy: Delirious" , " ", "Do the Right Thing" , " ", " ", " ", " ", " ", " ", " ", "Peggy Sue Got Married" , " ", " ", " ", " ", " ", "Son of Frankenstein" , " ", " ", " ", " ", " ", "Possessor" , " ", " ", " ", " ", " ", "Kes" , " ", " ", " ", " ", " ", "Angel Has Fallen" , " ", " ", "Songs My Brothers Taught Me" , " ", " ", "Ant-Man" , " ", "The King of Staten Island" , " ", "The Little Things" , " ", "Meatballs" , " ", "Tango & Cash" , " ", "Thief" , " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "Love, Simon" , " ", " ", "Wings of Desire" , " ", " ", "The Naked Gun: From the Files of Police Squad!" , " ", "Mutiny on the Bounty" , " ", "Bloody Nose, Empty Pockets" , " ", "Hud" , " ", " ", " ", " ", " ", "Harry and the Hendersons" , " ", " ", "Cries and Whispers" , " ", " ", "Cat on a Hot Tin Roof" , " ", " ", "Judas and the Black Messiah" , " ", " ", "The Invisible Man Returns" , " ", " ", "Grey Gardens" , " ", " ", "The Mummy's Hand" , "A Streetcar Named Desire" , " ", "Burn Motherfucker, Burn!" , "Yesterday, Today and Tomorrow" , " ", "The Invisible Woman" , "One Hundred and One Dalmatians" , "Babes in Toyland" , "Dear Zachary: A Letter to a Son About His Father" , "Toy Story That Time Forgot" , " ", "Yearbook" , " ", "Lessons of Darkness" , " ", "'71" , " ", "Guida" , " ", "Cobain: Montage of Heck" , " ", "Army of Shadows" , " ", "The Maze Runner" , " ", " ", "Sling Blade" , " ", " ", "Angels & Demons" , " ", " ", "Nomadland" , " ", " ", "The Wolf Man" , " ", " ", "Dracula" , " ", " ", "Sonic the Hedgehog" , " ", " ", " ", " ", " ", "Boogaloo and Graham" , " ", "Virunga" , " ", "Breakfast at Tiffany's" , " ", "ParaNorman" , " ", "Date Night" , " ", "Harold & Kumar Escape from Guantanamo Bay" , " ", "eXistenZ" , " ", " ", " ", " ", " ", "Ghost Rider" , " ", "Rise of the Guardians" , " ", "Paddington 2" , " ", "Dredd" , " ", " ", "All That Jazz" , " ", " ", "The Ghost of Frankenstein" , " ", " ", "Tom & Jerry" , " ", " ", "Street of Shame" , " ", " ", "Hiroshima Mon Amour" , " ", " ", "National Treasure: Book of Secrets" , " ", " ", "Early Spring" , " ", " ", "The Thing" , " ", " ", " ", " ", " ", "Invasion of the Body Snatchers" , " ", " ", "Amour" , " ", " ", "Aliens vs Predator: Requiem" , " ", " ", "Duel" , " ", " ", "WandaVision" , "Mr. Popper's Penguins" , "Top Secret!" , "Coming 2 America" , "The Life of Oharu" , " ", "Derek DelGaudio's In & of Itself" , " ", " ", " ", " ", " ", "Invisible Agent" , "Training Day" , " ", "The Violent Years" , "Sympathy for Mr. Vengeance" , " ", "Brother Bear" , " ", " ", "Polytechnique" , " ", " ", "The Book of Eli" , " ", " ", " ", " ", " ", "But I'm a Cheerleader" , " ", " ", " ", " ", " ", "Eagle Eye" , " ", "Be Cool" , " ", "Forbidden Planet" , " ", "South Park Vaccination Special" , "Hard Candy" , "Neighbours" , "To Be or Not to Be" , "An Optical Poem" , "Red Hot Riding Hood" , "Alice's Wonderland" , "The Mummy's Tomb" , " ", "Catalog" , "The Skin I Live In" , " ", "The Doors" , " ", " ", "Paris, Texas" , " ", " ", "What a Girl Wants" , " ", "Emma." , " ", "The Flavor of Green Tea Over Rice" , " ", "Jacob's Ladder" , " ", "Friday the 13th" , " ", "Do Not Split" , " ", "A Talking Cat!?!" , " ", "Video Games: The Movie" , " ", "News of the World" , " ", "A Nightmare on Elm Street 3: Dream Warriors" , " ", " ", "Them!" , " ", " ", "Capturing the Friedmans" , " ", "Confessions of a Dangerous Mind" , " ", "Meet Me in St. Louis" , " ", "Begone Dull Care" , "Frankenstein Meets the Wolf Man" , " ", "Near Dark" , "Greyhound" , " ", "I Saw the Devil" , " ", " ", " ", " ", " ", "Doubt" , " ", "Monsters vs Aliens" , " ", "Feeling Through" , " ", "Zack Snyder's Justice League" , " ", " ", "A Concerto Is a Conversation" , " ", " ", "Blue Valentine" , " ", "The One and Only Ivan" , " ", "Leningrad Cowboys Go America" , " ", "Jumper" , " ", " ", "Attack of the 50 Foot Woman" , " ", " ", "Blade II" , "Gremlins" , " ", "A Love Song for Latasha" , "Repo Man" , " ", " ", " ", " ", " ", " ", " ", "Phantom of the Opera" , " ", " ", "Lawrence of Arabia" , " ", " ", "Dune" , " ", "17 Again" , " ", "As Tears Go By" , " ", "Rock 'n' Roll High School" , " ", "Frozen" , " ", "Chungking Express" , " ", "Teeth" , "Godzilla" , " ", "Drop Dead Gorgeous" , "Godzilla vs. Kong" , " ", "The Bank Job" , "Presumed Innocent" , "Genius Loci" , "The United States vs. Billie Holiday" , "The Mission" , " ", "Shakma" , "Pumping Iron" , "The Amityville Horror" , "The Earrings of Madame de..." , "Black Panthers" , " ", "Son of Dracula" , "The White Tiger" , "The Father" , "The Pope of Greenwich Village" , "The Grand Budapest Hotel" , " ", "The Invisible Man's Revenge" , "The Mole Agent" , " ", "Yes-People" , "In a Lonely Place" , " ", "Vernon, Florida" , " ", " ", "Brazil" , " ", " ", "Backdraft" , " ", " ", "Bullitt" , " ", " ", "Paul Blart: Mall Cop" , " ", " ", "Insidious" , " ", " ", "Over the Moon" , " ", "Colette" , " ", "Miller's Crossing" , " ", "The Mummy's Ghost" , "The Muppets" , "Escape From Alcatraz" , "Hot Rod" , "Shin Godzilla" , " ", "House of Frankenstein" , " ", "Adam's Rib" , " ", "Collective" , " ", "Quo Vadis, Aida?" , " ", " ", " ", " ", " ", "Time Bandits" , " ", " ", " ", " ", " ", "Shaft" , " ", " ", "Spontaneous" , " ", " ", "A Face in the Crowd" , " ", " ", " ", " ", " ", "She-Wolf of London" , " ", "Semi-Pro" , " ", "Flash Gordon" , " ", "The Mummy's Curse" , " ", " ", "The Life Ahead" , " ", " ", "White Eye" , "Mulan" , " ", "Pinocchio" , "The Royal Tenenbaums" , " ", " ", " ", " ", " ", " ", " ", "A Shaun the Sheep Movie: Farmageddon" , " ", " ", "Better Days" , " ", " ", "12 Angry Men" , " ", " ", " ", " ", " ", "Opera" , " ", " ", "Love and Monsters" , " ", " ", "Two Distant Strangers" , " ", " ", " ", " ", " ", "Mortal Kombat" , " ", " ", "The Falcon and the Winter Soldier" , " ", " ", "The Man Who Sold His Skin" , " ", "Pieces of a Woman" , " ", "Minari" , " ", "Reds" , " ", " ", " ", " ", " ", "Captain America: Civil War" , " ", "I Love You Phillip Morris" , " ", "Fallen Angels" , " ", "The Devil Wears Prada" , "Unstoppable" , " ", "Real Steel" , "Umberto D." , " ", "16 Blocks" , " ", " ", "Murder Party" , " ", " ", "W." , " ", "Nomadland: See You Down The Road" , " ", "Invictus" , " ", "The Next Three Days" , " ", " ", " ", " ", " ", "House of Dracula" , " ", "The Lincoln Lawyer" , " ", "Strange Brew" , " ", "Abbott and Costello Meet Frankenstein" , " ", " ", "25th Hour" , " ", " ", "Spring Breakers" , " ", " ", " ", " ", " ", "Bill & Ted's Bogus Journey" , " ", " ", "The Craft" , " ", " ", "Hoosiers" , " ", " ", " ", " ", " " ];

var diaryListTags = [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", "-ss-", " ", "-ss-", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ak-", " ", " ", " ", " ", " ", "-ss-ak-", " ", " ", " ", " ", "-ak-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ak-", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ak-", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", "-ak-", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ak-", " ", " ", "-ss-", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", "-ak-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ak-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ak-", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", "-fnw-", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-fnw-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-fnw-", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", "-hm-", " ", " ", " ", " ", " ", "-hm-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-hm-", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", "-hm-", " ", " ", " ", " ", " ", " ", " ", "-hm-", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", "-hm-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-hm-", " ", "-ah-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ah-", " ", " ", "-ah-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ah-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-hm-", " ", "-ah-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ah-", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", " ", "-ah-", " ", " ", " ", " ", " ", " ", "-hm-", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ss-", " ", " ", " ", " ", "-ah-", " ", " ", " ", " ", " ", " ", " ", "-ah-", " ", " ", " ", " ", " ", "-hm-", " ", " ", " ", "-ss-", " ", "-ah-", " ", "-ss-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-ho-", " ", " ", " ", "-ho-", " ", "-ah-", " ", "-ah-", " ", "-ho-", " ", "-ho-", "-ah-", " ", "-ho-", "-ho-", " ", " ", " ", "-ho-", " ", "-ho-", " ", " ", " ", " ", "-ho-", "-ho-", " ", " ", " ", "-ho-", " ", "-ss-", " ", " ", " ", " ", " ", "-ho-", " ", " ", " ", " ", " ", "-ho-", "-ho-", "-ah-", "-ho-", " ", "-ah-", "-ho-", " ", "-ho-", " ", " ", "-ho-", " ", " ", " ", "-ho-", " ", "-ho-", " ", "-ho-", " ", "-ho-", " ", "-ho-", " ", " ", " ", " ", " ", "-ho-", "-ah-", " ", " ", " ", " ", " ", "-ho-", " ", " ", " ", " ", "-ho-", " ", " ", " ", " ", "-ho-", "-ah-", " ", " ", "-ho-", " ", " ", " ", "-ho-", " ", " ", "-ho-", " ", "-ho-", "-ho-", " ", "-ho-", " ", "-ho-", " ", "-ho-", " ", " ", " ", "-ho-", " ", "-ho-", " ", " ", " ", "-ho-", " ", " ", " ", " ", " ", "-ho-", "-ho-", "-ho-", " ", " ", " ", "-ho-", " ", " ", " ", "-ho-", " ", " ", " ", " ", " ", "-ho-", " ", "-ho-", "-ho-", " ", " ", "-ho-", " ", "-ho-", "-ho-", " ", " ", " ", "-ho-", " ", "-ho-", " ", " ", " ", " ", " ", "-ho-", "-ho-", " ", "-ho-", " ", "-ho-", " ", " ", " ", " ", " ", "-ho-", " ", "-houh-", " ", "-uh-", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", " ", " ", " ", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", " ", " ", " ", "-os-", " ", " ", " ", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", "-os-", "-os-", " ", " ", " ", "-uh-", "-os-", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", "-os-", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", "-os-", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", "-uh-", " ", " ", "-os-", " ", " ", "-os-", "-os-", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", " ", "-os-", " ", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-os-", " ", "-os-", " ", "-os-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", "-uh-", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "];

var diaryListLang = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'de', 0, 'en', 0, 0, 0, 0, 0, 'it', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'sv', 0, 0, 0, 0, 0, 'fr', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'it', 0, 0, 0, 0, 0, 'fr', 0, 0, 0, 0, 0, 'en', 0, 'hy', 0, 'en', 0, 'fr', 0, 'fr', 0, 'ko', 0, 'fr', 0, 0, 0, 0, 0, 'en', 0, 0, 'it', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 'en', 0, 'ja', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 0, 'ja', 'en', 0, 'en', 0, 'en', 0, 'fr', 0, 'cn', 'en', 'en', 'en', 'en', 0, 'en', 'en', 0, 'en', 'ko', 0, 'en', 0, 'ja', 0, 'ja', 0, 'ja', 0, 0, 'en', 0, 0, 'en', 0, 'fr', 0, 'cn', 0, 'en', 0, 'ja', 0, 'ja', 0, 'en', 0, 0, 'en', 0, 0, 'cs', 'en', 0, 'en', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'wo', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 'fr', 'ja', 'en', 0, 'en', 'en', 'en', 'en', 'en', 'fr', 'en', 'en', 0, 'en', 'sv', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 'en', 0, 'en', 'ja', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'ja', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'ja', 0, 0, 'en', 'en', 'en', 'en', 'ja', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 0, 'en', 'fr', 0, 'en', 'en', 'en', 'cn', 'en', 0, 'cn', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 0, 'en', 'en', 0, 'en', 0, 0, 0, 0, 0, 'fr', 'en', 0, 'en', 'en', 0, 'en', 'en', 'fr', 'en', 'en', 0, 'en', 'en', 'es', 'en', 'ru', 0, 'en', 'en', 0, 'en', 'ja', 0, 'en', 'en', 0, 'en', 'it', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'ja', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'fr', 0, 'hu', 'en', 'en', 'fr', 'fr', 'en', 'en', 'en', 'en', 'en', 'en', 0, 'ja', 0, 0, 'en', 0, 0, 'en', 'en', 0, 'en', 'fr', 0, 'de', 0, 'fr', 0, 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 'fr', 0, 'en', 'fr', 0, 'en', 'en', 'en', 'en', 'cn', 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 0, 'fr', 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 0, 'it', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 'en', 'en', 'fr', 'en', 0, 'en', 'en', 0, 'en', 'zh', 0, 'en', 'en', 0, 'en', 'fr', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'cn', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'sv', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'fr', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'es', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'fr', 0, 'en', 0, 0, 'en', 0, 0, 'it', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'cn', 0, 'zh', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'fr', 0, 'en', 0, 0, 'en', 0, 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'fr', 0, 'ja', 0, 'en', 0, 'ja', 0, 'en', 0, 0, 'en', 0, 0, 'ja', 'en', 0, 'en', 'ja', 0, 'ja', 0, 'fr', 0, 'en', 0, 'it', 0, 0, 0, 0, 0, 'ja', 0, 0, 'zh', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'sv', 0, 0, 'ja', 0, 0, 'en', 0, 0, 'en', 0, 0, 'zh', 0, 0, 'ja', 0, 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'sv', 0, 'fr', 0, 0, 0, 0, 0, 'ja', 0, 'en', 0, 'ja', 0, 'ja', 'en', 'zh', 'ja', 'en', 0, 'en', 0, 0, 0, 0, 0, 'es', 0, 'ja', 0, 'en', 0, 'ja', 'en', 0, 'fr', 'en', 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 0, 'en', 0, 'cn', 0, 'ja', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'zh', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'cn', 0, 0, 'ja', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'ja', 0, 'ja', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 0, 'fr', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 0, 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 'ja', 0, 'fr', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'ja', 0, 'en', 0, 'ru', 0, 'en', 0, 'ru', 0, 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 'en', 'en', 'fr', 0, 'en', 0, 'en', 0, 'sv', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 0, 'en', 0, 'ru', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 'en', 'en', 'cs', 'it', 'en', 'en', 0, 'en', 'de', 0, 'en', 0, 0, 'en', 0, 0, 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 0, 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 0, 'en', 'es', 0, 'en', 'en', 0, 'en', 'en', 0, 'cn', 'en', 'en', 'en', 'ko', 0, 'en', 'cn', 0, 'en', 'sv', 0, 'en', 'nl', 0, 'en', 'ja', 0, 'en', 'en', 'en', 'en', 'de', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'ko', 'en', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 0, 'en', 'en', 'en', 'en', 'fr', 0, 'en', 'en', 'en', 'en', 'hi', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'pl', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 'tr', 'en', 'fr', 0, 'en', 0, 0, 'ja', 0, 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 'en', 0, 'en', 'zh', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 'en', 'en', 'en', 'ja', 0, 'en', 'en', 'en', 'ko', 'en', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 0, 'ko', 0, 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 0, 'en', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'fi', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 'en', 0, 'en', 'pt', 0, 'en', 0, 0, 0, 0, 0, 'no', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'da', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'zh', 0, 'en', 'en', 'en', 'cn', 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 'en', 'en', 'ja', 'en', 0, 'fr', 'en', 0, 'en', 'en', 0, 'en', 0, 0, 'ja', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'cn', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'ko', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 'en', 0, 0, 'de', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'sv', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 'en', 0, 'en', 'it', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 0, 'de', 0, 'en', 0, 'pt', 0, 'en', 0, 'fr', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'ja', 0, 0, 'fr', 0, 0, 'en', 0, 0, 'ja', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 'en', 'en', 'en', 'ja', 0, 'en', 0, 0, 0, 0, 0, 'en', 'en', 0, 'en', 'ko', 0, 'en', 0, 0, 'fr', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 'en', 'en', 'en', 'en', 'en', 'en', 'en', 0, 'en', 'es', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'ja', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'xx', 'en', 0, 'en', 'en', 0, 'ko', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 'en', 0, 'en', 'en', 0, 0, 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'cn', 0, 'en', 0, 'en', 0, 'cn', 0, 'en', 'ja', 0, 'en', 'en', 0, 'en', 'en', 'fr', 'en', 'en', 0, 'fr', 'en', 'en', 'fr', 'fr', 0, 'en', 'en', 'en', 'en', 'en', 0, 'en', 'es', 0, 'is', 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'fr', 0, 'en', 0, 'en', 'en', 'en', 'en', 'ja', 0, 'en', 0, 'en', 0, 'en', 0, 'sr', 0, 0, 0, 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'it', 0, 0, 'he', 'en', 0, 'it', 'en', 0, 0, 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'ar', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'cn', 0, 'en', 'en', 0, 'en', 'it', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 'en', 0, 'en', 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0, 'en', 0, 0, 'en', 0, 0, 'en', 0, 0, 0, 0, 0];

diaryListGenre = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [18,37], 0, 0, 0, 0, 0, [12, 18, 10751], 0, 0, [18], 0, 0, [18], 0, [35], 0, [10749, 18], 0, [35, 18, 10749], 0, 0, 0, 0, 0, [18, 9648], 0, 0, 0, 0, 0, [80, 53, 18], 0, 0, 0, 0, 0, [28, 12, 18], 0, 0, 0, 0, 0, [18], 0, 0, 0, 0, 0, [18, 53, 12], 0, 0, [28, 12, 14], 0, 0, [18], 0, 0, 0, 0, 0, [10402, 18, 36], 0, 0, [18, 10749], 0, 0, [16, 18, 10751], 0, 0, [28, 12, 10752], 0, 0, [99], 0, 0, [35, 80, 18, 53], 0, 0, [35, 18, 10749], 0, 0, [18], 0, 0, [18, 10749], 0, 0, 0, 0, 0, [18, 36, 10752], 0, 0, 0, 0, 0, [18], 0, [18, 36], 0, [18, 14, 37], 0, [53, 18, 10752], 0, [18, 10749, 35], 0, [80, 18, 53], 0, [80, 18], 0, 0, 0, 0, 0, [80, 18, 9648], 0, 0, [35, 18], 0, 0, [27, 9648, 878], 0, 0, [18, 53, 9648], 0, 0, [16, 10751, 12, 35, 14], 0, [35, 10749, 18], 0, [18], 0, [18], 0, [18,10749], 0, [28, 18], 0, [10402, 12, 35, 10751], [35, 18, 36], 0, [18, 36], [35, 10749], 0, [35, 10749, 18], 0, [28, 80, 53], 0, [37, 18, 12], 0, [18], [12, 28, 878], 0, [12, 18, 28, 35], [878, 28], 0, [12, 878, 28], 0, [18], 0, [18], 0, [28, 53, 80], [53, 80, 18], [18, 53], [18, 10749, 10752], [35, 12, 10751], 0, [53, 80, 18, 9648], [80, 18, 53], 0, [16, 10751], [35], 0, [35, 18, 10749], 0, [80, 18, 53], 0, [35], 0, [18, 53], 0, 0, [80, 18, 53], 0, 0, [27], 0, [18], 0, [28, 80, 53], 0, [35], 0, [53,27,878], 0, [80, 18, 9648, 53], 0, [80, 18, 9648, 53], 0, 0, [18, 10749], 0, 0, [12, 14], [18, 10752], 0, [80, 27, 9648], [18], 0, [28, 35, 27, 878], 0, [35, 9648, 10749, 53], 0, [18], 0, [35, 80, 28], 0, 0, [12, 28, 14], 0, 0, [18,10402,36], 0, 0, [18, 10749], 0, 0, [18], 0, [18, 10402], 0, [878, 12, 9648], 0, [18, 878], [12, 28, 53], [10749, 18, 35], [35, 18, 80, 53], [35, 16, 12, 10751, 14], 0, [12, 18], [18], [18, 36], [99], [80, 9648, 53], [18, 16, 35], [99, 10402], [10749, 35], 0, [35, 18, 10749], [14, 18, 9648], 0, [35, 18], 0, 0, [10752, 18, 12, 36], 0, 0, [18, 10751, 14, 12], 0, 0, 0, 0, 0, [35, 18], [99], 0, [37, 12, 28], [35,14,27], 0, [99, 10402], 0, 0, 0, 0, 0, [18, 10749], 0, 0, [18], 0, 0, [35, 18, 10749], 0, [18, 10749, 10752], 0, [35, 10749], 0, [18, 37, 10749], 0, 0, [18], 0, 0, [18, 36], [35, 10749], [18, 53, 80, 12], [27, 53, 12], [14,18], 0, [80, 18, 10749, 53], 0, [10749, 18], 0, [35, 18, 10749], 0, [35, 10749], 0, [18, 10752], 0, [12, 35, 10751, 14, 10749], 0, [18, 9648, 53, 80], [99], 0, [18, 10749], [18], 0, [35, 18], [10770, 10749, 35, 18], [36, 10749, 18], [18, 35, 10749], [27, 53], 0, [18, 35, 10749], [99, 10402], 0, [28, 12, 10751, 14], [18, 10749], 0, [10749, 18], [18], 0, [28, 53], [27, 9648, 53, 80], 0, [18, 10749], [18], [18, 10752], [37, 18], [35, 37], [35, 80, 18], [18, 80, 36, 10770], [35], 0, [18], [35, 18], 0, [18], 0, 0, 0, 0, 0, [99], [35, 18, 27], 0, [878, 28], [80, 53], 0, [35, 80, 18], [80, 18, 9648, 53], [99], [9648, 14], [18, 16], 0, [35], [10402], [27, 878], [18, 10749], [28, 12, 18], 0, [27, 10752, 878], [28, 53, 80, 10749], 0, [35, 10749], [18], 0, [12, 28, 14], [35, 18], 0, [27], [18, 10749], 0, [18], 0, 0, 0, 0, 0, [35, 10749], 0, 0, [28, 18, 36, 10752], 0, 0, [37], 0, [18, 28, 36], 0, [18], 0, [10402, 18, 36], 0, [37], 0, [35], 0, [16, 35, 10751, 12], 0, [12, 18, 10749], 0, [35, 18], 0, [18], [16], [16], [14], [14], [18], [16], [35, 18], [35, 10402], [18, 9648, 53], [35], 0, [28,18,36], 0, 0, [18, 53, 27], 0, 0, [18, 10749], [36, 99], 0, [80, 18, 10749], [18, 35, 10749], 0, [18, 27, 53, 80], 0, [18, 28, 80], 0, [80, 53, 18], 0, [35, 10751, 14], [35, 18, 36], 0, [99], [80, 28, 878], 0, [99], 0, 0, [18, 53, 10752], 0, 0, [37, 18], 0, 0, 0, 0, 0, [16, 35, 18], 0, 0, 0, 0, 0, [35, 18], [18, 28, 80], 0, [18, 10749], [35], 0, [12, 18, 36, 10749], [35], [28, 12, 878, 53], [878, 12, 35, 14], [18, 10749], 0, [18], 0, 0, [80, 18, 53], 0, 0, [99], 0, 0, [53, 80], 0, 0, [18,80], 0, [53, 27, 878], 0, [18, 36], 0, [878, 27, 28], 0, [99, 10402], 0, [80, 18, 53], 0, [36, 18], [18, 36], 0, [9648, 18, 53], [35, 10749], 0, [37], 0, 0, 0, 0, 0, [35, 18, 10749], 0, 0, 0, 0, 0, [99, 10402], [14, 35], 0, [99, 36], [18], 0, [35, 18, 10749], 0, 0, [18], 0, 0, [99], 0, [37], 0, [18, 10752], 0, [80, 99, 9648], 0, [99], 0, [35], 0, [18, 10402, 10749], 0, 0, 0, 0, 0, [18, 9648, 53], 0, 0, [18, 36, 10749], 0, 0, [10752, 18], 0, 0, [18], 0, 0, [28, 80, 35], 0, 0, [18, 80, 10749], 0, 0, [18, 36, 35], [99], [35, 10749], [18, 80], [99], 0, [35, 10749], [99], 0, [28], [18], 0, [99], [99], 0, [18, 12], [18, 10749], 0, [12, 16, 9648], 0, 0, 0, 0, 0, [10749, 18, 9648], 0, 0, 0, 0, 0, [27, 53], 0, 0, 0, 0, 0, [99], 0, 0, 0, 0, 0, [18, 10749], 0, 0, [18, 28, 36], 0, 0, [53, 27, 18], 0, [35], 0, [18], 0, [99, 27, 36], 0, 0, [80, 18], 0, 0, [99, 10402], 0, 0, [18, 10749], 0, 0, [18, 27, 53, 80], 0, 0, [27, 35], 0, 0, [35, 10402], 0, [18, 10749], 0, [35, 10402, 10749], 0, [10751, 878, 12], 0, [18, 53], 0, [18, 35], 0, [99], 0, 0, [80, 18], 0, 0, [18, 10749, 10752], 0, [35, 18, 9648], 0, [35, 14, 27], 0, [28, 53, 18], 0, 0, [99, 10752], 0, 0, [80, 18, 53], 0, 0, [53, 80, 9648], 0, 0, [18, 9648, 53], 0, 0, 0, 0, 0, [35, 14, 10749], 0, 0, 0, 0, 0, [99], 0, [28, 12, 10751, 14], 0, [10749, 35, 80, 18], 0, [28, 12, 878], 0, 0, [28], 0, 0, [18, 10751], 0, 0, [10402,35,18], 0, 0, [27], 0, [10751, 878], 0, [35, 18], 0, [35, 18], 0, 0, [35, 80], 0, 0, [16, 37, 35], 0, 0, 0, 0, 0, [35, 18, 9648], 0, 0, [10402, 18, 36], 0, 0, [27, 53, 10749, 9648], 0, 0, 0, 0, 0, [28, 12, 10751, 14], 0, [27], 0, [28,35,18,10749], 0, [27, 53], 0, 0, [18], 0, 0, [14, 16, 35, 10751], 0, [35, 80, 53, 18], 0, [18, 10751], 0, [12, 18], 0, [35, 10749, 14, 9648, 878], 0, [27, 878], 0, [18, 27, 878], 0, [18, 27, 878], 0, [18, 10749], 0, [28], 0, 0, 0, 0, 0, [878, 28, 53], 0, [27], 0, [18], 0, [16, 10751, 14], 0, 0, [18, 53, 36, 10752], 0, 0, [18, 27, 14, 53], [99], 0, [18, 53, 878], [37], 0, [27, 878], 0, 0, [80, 18, 10749], 0, 0, [28, 80, 18, 53], 0, [27], 0, [53], 0, [80, 18, 53], 0, 0, 0, 0, 0, [10402, 18, 36], 0, 0, [878, 28, 53, 12, 27, 35], 0, 0, [10752, 36, 28, 18], 0, [18, 10749], 0, [18, 53], 0, [28, 878, 27], 0, [36, 18], 0, [18], 0, [18, 35], 0, 0, [53, 18, 878], 0, 0, [18], [99], 0, [99], [18], 0, [16, 10751, 14, 12, 18], 0, [18, 878, 9648], 0, [27, 53], 0, [10749, 18], 0, 0, 0, 0, 0, [35,10751,18], 0, 0, [10749, 18], 0, 0, [28, 18, 12], 0, [35, 80], 0, [35, 14], 0, [99, 10752], 0, [18, 37, 10749], 0, [27], 0, [18, 53], 0, [35, 27, 878], 0, [27, 9648], 0, [18,80,14], 0, 0, [35, 80], 0, 0, [35], 0, 0, [18, 53, 80], 0, 0, [18, 28, 53], 0, 0, [80,18], 0, 0, [27, 9648, 53], 0, [27], 0, [18], 0, [18, 10770], 0, 0, [80, 18], 0, 0, [28, 18, 37], 0, 0, [53, 18, 27], 0, 0, [99], 0, 0, 0, 0, 0, [27, 9648, 53], 0, [37], 0, [18], 0, [18, 10749, 35], 0, 0, 0, 0, 0, [12, 16, 14], 0, [14,27], 0, [18], 0, [12, 14, 16, 28, 10751, 10749], [12, 27], [18, 10749], [27, 878], [35, 80, 18], 0, [12, 53], 0, 0, 0, 0, 0, [18, 10749], 0, [14, 16, 10751], 0, [35, 14, 10749], 0, [27, 53], [27, 9648, 53], 0, [18, 10749], [35, 18, 53], 0, [35, 18], 0, [18, 53], 0, [16, 10751, 14, 12], 0, [28, 80, 53], 0, [35, 18, 10749], 0, [18, 28, 10749], 0, [10751, 35, 16, 12], 0, [27, 35], 0, [35, 18], 0, [10749, 35, 18], 0, [35, 14, 10749, 18], 0, [80, 18, 53], 0, [99, 80], 0, [878, 28, 12], 0, [12, 14, 16], 0, [18, 9648, 53, 27], 0, 0, [18], 0, 0, [18], 0, 0, [80, 18, 10749], 0, 0, [80, 18], 0, 0, [18], 0, 0, [28, 80], 0, 0, [80, 18, 10749], 0, 0, [16, 10751, 14], 0, [18, 53], 0, [18, 36], 0, [35, 53, 18], 0, 0, 0, 0, 0, [27, 18, 14, 53], 0, 0, [35, 878, 14], 0, 0, [99], 0, 0, [18], 0, 0, [27,53], 0, 0, [80, 9648, 53], 0, 0, [18], 0, 0, 0, 0, 0, [18, 53], 0, 0, 0, 0, 0, [12, 35, 878], 0, 0, [10752, 18, 28, 53], 0, 0, [18, 36, 10752], 0, 0, [18, 53], 0, 0, [80, 18, 53], 0, 0, [18], 0, 0, [99, 36], 0, [878, 14, 28, 12], 0, [27, 35, 10749], 0, [18, 27, 80, 53], 0, 0, [9648, 53], 0, 0, [18, 80, 99], 0, [28, 878, 12, 35, 10751], 0, [18], 0, [28, 12, 35, 10751], 0, [35], 0, [18], 0, [14, 16, 12], 0, [9648, 53], 0, [18], 0, [35, 80], 0, 0, 0, 0, 0, [18, 10749, 10402], 0, [18, 53, 36], 0, [18], 0, [35, 18, 10749], [18, 9648, 53, 10749], 0, [14, 27], [18], 0, [35, 18, 10749], [80, 18], 0, [28, 878, 12], [80, 18, 53], 0, [28, 35, 10749], 0, 0, [18, 36], 0, 0, [99, 36], 0, 0, [28, 12, 53], 0, 0, [9648, 10749, 53], 0, 0, [18], 0, 0, [35, 18], [16, 10751], 0, [18], [28, 12, 27, 878], 0, [18], 0, [28, 12, 878], 0, [35, 10749], 0, [35], [99], [18, 35], [80, 35], [18], [18, 10770], [28, 53], [18], [53, 18], [27], [80, 18, 53], 0, [99], 0, [10749, 18], 0, [10402, 35, 28, 80], 0, [10752, 18, 53], [99], 0, [28, 878, 12, 14], [18, 36, 10752], 0, [16, 10752, 36, 18, 10749], 0, [35, 18, 10749], 0, [18, 36], 0, [53, 18, 10749], 0, [18,36], 0, [27, 53], 0, [99, 10402], [18], 0, [35], [18, 10749], 0, [10751, 16, 12, 35], [35, 18], 0, [9648, 53], [16, 18, 9648], 0, [16, 10751], [35, 18], [80, 53, 10749], [35], [18, 35, 10749], 0, [28, 80, 53, 18], 0, [27, 878, 53], 0, [27, 9648, 35], 0, [27, 9648, 53], [35,18], [18], [878, 18], [18, 27, 53], 0, [80, 53], 0, [80, 53], 0, [18, 27], 0, [27, 53, 10770], [53, 9648, 18], [18], [27], [878, 28, 18, 53], 0, [18, 53], [18, 35, 10402], [27], [35, 10749], [27, 10402, 878], 0, [28, 12, 35], [99], 0, [27, 9648], [28, 35, 878], 0, [10752, 18, 16], 0, [80, 27, 53], 0, [878,18], 0, [10749, 10751, 16], [28, 53], 0, [99], [35, 27], 0, [12, 878, 10751, 14], [35, 18], [35, 10749], [18, 10749], [14, 12, 18], [878, 27], [80, 18, 53], [53, 9648, 18, 27], 0, [9648, 10749, 53], [18, 14, 27], 0, [27, 878], 0, 0, [53, 878, 27], 0, 0, [99], [18,878], [35, 18], [53, 14, 35, 10751, 9648], [18, 10402], [35, 27], [10402, 99], [14, 28, 27], [18], [27, 878], [18], 0, [18, 36], [99], [18, 36], [28, 27, 878, 53], [27, 18, 53], [878, 35, 27], [99], [18, 10752, 28], 0, [10402, 35], [18, 27, 53], 0, [18], [18], 0, [27, 878, 53], [28, 80, 18, 53], 0, [35, 28], [18, 36], [35, 27], [27], [18], 0, [35, 27], [80, 28, 35, 53], 0, [18], [27, 18], 0, [18, 28, 36, 53], [27], 0, [53, 9648, 27], [80,53,27,9648], 0, [27], [99], [99], [80, 53], [27, 14], 0, [35, 18], 0, [14, 27, 35], 0, [53, 27, 9648], 0, [99], [18, 53], [27, 53], [99, 10402], [18, 9648], [35], [35], [28, 35, 53, 80, 10751], [27, 9648, 53], [35, 18, 878, 53], [27], 0, [10751, 14, 12, 35, 27], [35, 18], [27, 9648, 36, 53, 18], [28, 80, 18, 53], [27,878], 0, [27, 53, 9648], [10402, 18, 35, 10751], [10402, 99], [18, 10749, 10752], [16, 35], [12, 16, 14, 10751], [27, 53, 878, 35], [18, 10749], [10770, 27, 35, 878], [878, 27], [35, 18, 10749], 0, [35, 27, 53], [18], [18, 53, 12, 27], [27, 10749], [18], 0, [80, 53], [35, 27], [12, 28, 35, 53, 80], [27, 53, 18], [99], 0, [12, 35, 10751, 14], [18], 0, [27, 53], [35, 18, 27], 0, [18, 27, 53], [53, 18], [28, 27], [35, 18], [80, 9648, 878, 53], 0, [18], 0, [27, 878], 0, [27, 53], 0, [18], 0, [10402, 35, 18], 0, [18,10749,10752,10402], 0, [35], [10749, 18], 0, [35, 18], [12, 28, 35, 53, 80], 0, [35, 18], [28, 53, 12], 0, [10402, 35, 10749], [10751, 14, 16], 0, [12, 35, 16, 10751], [99], [16, 35, 10751, 14], [99], [18, 10749], 0, [99, 18, 36], [18, 80], 0, [99], [28, 53, 878], 0, [35, 18], [12, 35, 10751, 878], [18], [16, 35], [16, 35], 0, [18, 53], 0, 0, [18], 0, 0, [36,18,28,53], 0, [80, 18], 0, [35], 0, [28, 35, 14, 878], [28, 12, 80, 878, 53], 0, [12, 35, 80], [18, 9648], 0, [99], [99], 0, [53, 80, 28], [18], 0, [10751, 14, 16, 12, 10770], [99], [18], [18,878], [18], 0, [99, 10402], [35, 18, 10751], [28, 80, 18, 53], [27, 35], [18, 27, 53], 0, [28, 12, 878, 53], [10752, 18, 53], [18, 10749], [28, 53, 80, 12], [18, 10749], 0, [18, 28, 53], 0, [10752, 18, 53, 28], 0, [18, 10749], 0, [53, 18], [16, 10751], 0, [10749, 18], [99], 0, [10751, 14, 12], 0, [27, 53], 0, [18,37,36], 0, [18, 10751, 14], 0, [12, 18, 27], 0, [35, 28], 0, [12, 28, 53], 0, [80, 18], 0, [99], 0, [99], [18], 0, [16, 12, 35, 10751, 878], [878, 53, 12, 28, 18], 0, [35, 99, 36], 0, [10751, 10749, 35, 18], 0, [9648, 53, 18], 0, [18], 0, 0, [18], 0, 0, [99], 0, 0, [80, 18, 53], 0, 0, [99], 0, [28, 80, 53, 9648], 0, [28, 27, 878, 53], 0, [99], 0, 0, 0, 0, 0, [12, 28, 53], 0, 0, [35, 18], 0, 0, [12, 28, 53], 0, [18], 0, [35, 10751], 0, [18, 10402, 10749], 0, 0, [18], 0, 0, [10752, 18, 28, 53], 0, 0, [99, 9648, 80], 0, 0, [10752, 53, 28, 18], 0, 0, [18], 0, 0, [99], 0, 0, 0, 0, 0, [99], 0, 0, [12, 18, 878], 0, 0, [28, 80, 18, 36, 53], 0, 0, [18, 10402, 10749], 0, 0, [35, 10749], 0, 0, 0, 0, 0, [878, 12, 10751, 14], 0, [18,10402], 0, [12, 28, 35, 10749], 0, [18, 10749], 0, 0, [18], 0, 0, [35, 28, 27], 0, 0, [18, 36], 0, 0, [27, 53], 0, 0, [35], 0, 0, [28, 53, 12], 0, 0, 0, 0, 0, [35, 18, 10749], 0, 0, [99], 0, 0, [35, 18, 36], 0, 0, [37, 53], 0, 0, [35, 18], 0, 0, [80, 18, 53], 0, 0,  [99], 0, 0, 0, 0, 0, [37, 18, 36], 0, 0, 0, 0, 0, [80, 18, 53], 0, 0, [36, 18], 0, 0, [12, 10749], 0, 0, 0, 0, 0, [35, 18], 0, 0, [18], 0, 0, [80, 18, 37], 0, 0, [18], 0, 0, [18, 53, 80], 0, 0, [18, 28, 53], 0, 0, [14], 0, 0, 0, 0, 0, [10751, 14, 10402], 0, 0, 0, 0, 0, [18, 36, 10752], 0, 0, [35,18,36,12], 0, 0, [18, 80, 10749], 0, 0, 0, 0, 0, [37], 0, 0, 0, 0, 0, [35, 10751], 0, 0, [35, 10749], 0, 0, [18], 0, 0, [878, 18], 0, 0, [10751, 16, 35, 18, 10402, 14], 0, 0, 0, 0, 0, [18], 0, 0, 0, 0, 0, [99], [99], 0, [53, 27, 18], [9648, 37, 53], 0, [99, 10402], 0, 0, 0, 0, 0, [99], 0, 0, 0, 0, 0, [28, 12, 53], 0, 0, [18, 36, 10752], 0, 0, [28, 35, 80, 18, 53], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [80, 18, 36, 53], 0, 0, [18], 0, 0, [27], 0, 0, [10749, 35], 0, 0, [18, 10749, 10402], 0, 0, [99], 0, 0, [35, 18], 0, 0, 0, 0, 0, [99], 0, [35], 0, [28, 53, 878], 0, [10402, 99], 0, [37, 18], 0, [12, 18], 0, [10751, 12, 16, 14], 0, [18, 53, 36], 0, [18, 36, 10752], 0, [14, 28, 12], 0, [35], 0, [35, 18, 10749], 0, [36, 99], [99, 10402], [99], [28, 12], [16, 10751], 0, [16, 10751, 18], 0, [28, 80, 878], 0, [35, 18, 10402], 0, [80, 18, 53], 0, 0, [35, 18], 0, 0, [35, 18, 10749], 0, [99], 0, [27, 14, 53], 0, [18], 0, 0, [53, 80, 18], 0, 0, [27, 18, 14], [99,10402], [27], [80, 18, 53], [10402, 14], 0, [14], [16], 0, [53, 878, 27], [80, 18, 35], 0, [18, 14, 27], 0, 0, [28, 53, 80], 0, 0, [18, 10402], 0, [99], 0, [28, 12, 35, 80, 18, 10749], 0, [35, 878], 0, 0, [35, 18, 10749], 0, 0, [18, 35, 10749], 0, [99], 0, [18, 35, 10770], 0, [18], 0, 0, [12, 35, 18, 10749], 0, 0, [18, 14, 27], 0, 0, [27, 53], 0, 0, [16, 35, 10751], 0, 0, 0, 0, 0, [35], 0, [53, 80, 28], 0, [18], 0, [35, 18], 0, 0, 0, 0, 0, [16, 10751], 0, [16, 10751, 14, 28, 53], 0, [18, 10752], 0, [10749, 35, 27], 0, [35], 0, [18], 0, 0, 0, 0, 0, 0, 0, [35, 18, 14, 10749], 0, 0, 0, 0, 0, [27, 878], 0, 0, 0, 0, 0, [53, 878, 27], 0, 0, 0, 0, 0, [18], 0, 0, 0, 0, 0, [28, 53], 0, 0, [18], 0, 0, [878, 28, 12], 0, [35, 18], 0, [53, 80], 0, [35], 0, [28, 12, 35, 53], 0, [80, 53, 28], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, [35, 18, 10749], 0, 0, [18, 14, 10749], 0, 0, [35, 80], 0, [12, 18, 36], 0, [99, 18], 0, [18, 37], 0, 0, 0, 0, 0, [35, 10751, 14], 0, 0, [18], 0, 0, [18, 10749], 0, 0, [18, 36], 0, 0, [18, 27, 9648, 878, 53], 0, 0, [99], 0, 0, [27], [18], 0, [99], [18, 35, 10749], 0, [10749, 878, 35], [12, 16, 35, 10751], [35, 10751, 14], [80, 99], [16, 10751, 10770, 12, 35, 14], 0, [35, 16], 0, [10752, 99], 0, [53, 28, 18, 10752], 0, [16, 18], 0, [99], 0, [10752, 18, 53], 0, [28, 9648, 878, 53], 0, 0, [18], 0, 0, [53, 9648], 0, 0, [18,37], 0, 0, [27, 18], 0, 0, [27, 18, 14], 0, 0, [28, 878, 35, 10751], 0, 0, 0, 0, 0, [35, 18], 0, [99, 10752], 0, [35, 18, 10749], 0, [10751, 16, 12, 35], 0, [35], 0, [35, 12], 0, [28, 53, 878, 27], 0, 0, 0, 0, 0, [53, 28, 14], 0, [10751, 16, 14, 28, 12], 0, [12, 35, 10751], 0, [28, 878], 0, 0, [18], 0, 0, [18, 14, 27, 878], 0, 0, [35, 10751, 16], 0, 0, [18], 0, 0, [18, 36, 10749], 0, 0, [28, 12, 9648, 53], 0, 0, [18], 0, 0, [27, 878, 9648, 53], 0, 0, 0, 0, 0, [27, 878, 9648], 0, 0, [18, 10749], 0, 0, [14, 28, 878, 53, 27], 0, 0, [28, 53, 10770], 0, 0, [878, 9648, 18], [35, 10751], [35], [35], [18], 0, [99], 0, 0, 0, 0, 0, [12, 35, 10749, 878, 10752], [28, 80, 18, 53], 0, [18, 53], [28, 18, 53], 0, [12, 16, 10751], 0, 0, [80, 18], 0, 0, [28, 53, 878], 0, 0, 0, 0, 0, [35,18,10749], 0, 0, 0, 0, 0, [9648, 53, 28], 0, [35, 80], 0, [878], 0,  [35], [18, 53], [16, 35], [35, 10752], [16], [16, 35], [16], [18, 14, 27, 9648, 53], 0,  [16], [18, 53, 9648], 0, [10402, 18], 0, 0, [18], 0, 0, [35, 10749, 18, 10751], 0, [35, 18, 10749], 0, [18], 0, [18, 9648, 27], 0, [27], 0, [99], 0, [35, 10751, 14], 0, [36, 99, 16], 0, [28, 12, 18, 37], 0, [27, 53], 0, 0, [878, 27], 0, 0, [99], 0, [35, 80, 18, 10749, 53], 0, [35, 18, 10749, 10751], 0, [16, 10402], [27], 0, [27], [10752, 28, 18], 0, [53, 27], 0, 0, 0, 0, 0, [18], 0, [16, 10751, 12, 878], 0, [18], 0, [28, 12, 14, 878], 0, 0, [99], 0, 0, [18, 10749], 0, [10751, 35, 18], 0, [35, 10402], 0, [28, 12, 878], 0, 0, [27, 878], 0, 0, [14, 27, 28, 53], [14, 27, 35], 0, [99], [35, 878], 0, 0, 0, 0, 0, 0, 0, [27, 10749, 18], 0, 0, [10752, 36, 12, 18], 0, 0, [28, 878, 12], 0, [35], 0, [18, 28, 53, 80, 10749], 0, [35, 10402], 0, [53], 0, [18, 35, 10749], 0, [35,27], [53,27,878], 0, [35], [878, 28, 18], 0, [53, 80, 18], [53, 80, 9648], [16, 18, 14], [10402, 18, 36], [12, 18, 28, 36], 0, [27], [99], [27], [18, 10749], [99], 0, [14, 27], [80, 18], [18], [18, 28, 35, 80], [35, 18], 0, [27, 878], [99], 0, [16, 35], [53, 9648, 18, 10749], 0, [99], 0, 0, [35, 878], 0, 0, [80, 18, 53], 0, 0, [28, 80, 18, 53], 0, 0, [28, 12, 35, 10751], 0, 0, [27, 53], 0, 0, [16, 12, 10751, 14], 0, [99], 0, [18, 53, 80], 0, [27], [10751, 35, 10402], [18, 53], [28, 35], [28, 878, 27], 0, [27, 878], 0, [35, 18, 10749], 0, [27], 0, [18, 10752], 0, 0, 0, 0, 0, [10751, 14, 878, 12, 35], 0, 0, 0, 0, 0, [28, 80, 53], 0, 0, [35, 27], 0, 0, [18], 0, 0, 0, 0, 0, [80, 27, 9648], 0, [35], 0, [878, 28, 12], 0, [27], 0, 0, [18], 0, 0, [18], [12, 14], 0, [14, 10751, 12, 18], [35, 18], 0, 0, 0, 0, 0, 0, 0, [35, 16, 10751], 0, 0, [35, 18], 0, 0, [18], 0, 0, 0, 0, 0, [16], 0, 0, [35, 28, 12, 14], 0, 0, [18, 35], 0, 0, 0, 0, 0, [28, 14, 12, 878], 0, 0, [878,28,18,10752], 0, 0, [18], 0, [18], 0, [18], 0, [18, 36, 10749], 0, 0, 0, 0, 0, [12, 28, 878], 0, [35, 18, 10749], 0, [18, 28, 10749], 0, [35, 18, 10749], [28, 53], 0, [28, 878, 18], [18], 0, [28, 12, 80, 53], 0, 0, [35, 27], 0, 0, [18, 36], 0, [99], 0, [18, 36], 0, [10749, 18, 53, 80], 0, 0, 0, 0, 0, [27, 878, 14], 0, [80, 18, 53], 0, [35], 0, [35, 27], 0, 0, [80, 18], 0, 0, [18,80], 0, 0, 0, 0, 0, [12, 35, 878], 0, 0, [14, 27, 18, 53], 0, 0, [18, 10751], 0, 0, 0, 0, 0]


// --- YEAR TOTALS GRAPH --- //
// Create nulls
for (var i = yearsTotal-1; i >= 0; i--) {    
    // Make Shape for year
    var newShape = myComp.layers.addShape();
    newShape.name = (1920 + i) + " SHAPE";
    yearShapes.push(newShape);
    
    // Make Null for year
    var newNull = myComp.layers.addNull(); // Create null
    newNull.enabled = false;
    newNull.name = 1920 + i; // Set null name to correct year
    newNull.transform.position.dimensionsSeparated = true; // Separate dimensions
    var xPos = margin + ((graphWidth / (yearsTotal - 1) * i));
    var yPos = myComp.height - (diaryListYearTotal[i] * barHeightUnit) + (diaryListCountTotal[i] * barHeightUnit);
    newNull.transform("ADBE Position_0").setValue(xPos); // Set position values
    var myProperty = newNull.transform("ADBE Position_1");
    myProperty.setValueAtTime(0, yPos); // Set position values
    myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD); // Convert to HOLD Keyframe
    yearNulls.push(newNull); // Add newNull to yearNulls so we don't have to rely on layer index
}

yearNulls.reverse(); // Reverse order of yearNulls so that 1920 is 0
yearShapes.reverse(); // And yearShapes

// Create shapes
for (var i = yearShapes.length - 1; i >= 0; i--) {
    var thisLayer = yearShapes[i];
    
    // Create and transform shape
    var shapeGroup = thisLayer.property("Contents").addProperty("ADBE Vector Group");
    shapeGroup.name = "Bar";
    var pathGroup  = thisLayer.property("Contents").property("Bar").property("Contents").addProperty("ADBE Vector Shape - Rect");
    var fillGroup  = thisLayer.property("Contents").property("Bar").property("Contents").addProperty("ADBE Vector Graphic - Fill");
    // thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Size").setValue([barW, barH]);
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Size").expression = "x = thisComp.layer(\"NULL - GLOBAL CONTROLLER\").effect(\"Global Bar Width\")(\"Slider\");\ny = 800;\nvalue = [x, y];";
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Position").setValue([0, barH/2]);
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Roundness").setValue([barW/2]);
    thisLayer.property("Contents").property("Bar").property("Contents").property("Fill 1").property("ADBE Vector Fill Color").setValue([1, 1, 1]);

    // Parent to NULL above
    parentLayer = myComp.layer(thisLayer.index - 1);
    thisLayer.parent = parentLayer;
    thisLayer.property("position").setValue([0,0]);
}

// --- YEAR ENTRIES GRAPH --- //
// Create nulls
for (var i = yearsTotal-1; i >= 0; i--) {    
    // Make Shape for year
    var newShape = myComp.layers.addShape();
    newShape.name = (1920 + i) + " ENTRIES SHAPE";
    newShape.label = 6;
    yearEntriesShapes.push(newShape);
    
    // Make Null for year
    var newNull = myComp.layers.addNull(); // Create null
    newNull.enabled = false;
    newNull.name = (1920 + i) + " ENTRIES NULL"; // Set null name to correct year
    newNull.label = 7;
    newNull.transform.position.dimensionsSeparated = true; // Separate dimensions
    var xPos = margin + ((graphWidth / (yearsTotal - 1) * i));
    var yPos = myComp.height;
    newNull.transform("ADBE Position_0").setValue(xPos); // Set position values
    var myProperty = newNull.transform("ADBE Position_1");
    myProperty.setValueAtTime(0, yPos); // Set position values
    myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD); // Convert to HOLD Keyframe
    yearEntriesNulls.push(newNull); // Add newNull to yearEntriesNulls so we don't have to rely on layer index
    newNull.transform("ADBE Position_1").expression = "y = value\;\nh = thisComp.height - y\;\nu = thisComp.layer(\"NULL - GLOBAL CONTROLLER\").effect(\"Global Bar Height\")(\"Slider\")\nvalue = thisComp.height - (h * u)\;"
    "x = thisComp.layer(\"NULL - GLOBAL CONTROLLER\").effect(\"Global Bar Width\")(\"Slider\");\ny = 800;\nvalue = [x, y];";
}

yearEntriesNulls.reverse(); // Reverse order of yearEntriesNulls so that 1920 is 0
yearEntriesShapes.reverse(); // And yearEntriesShapes

// Create shapes
for (var i = yearEntriesShapes.length - 1; i >= 0; i--) {
    var thisLayer = yearEntriesShapes[i];
    // Create and transform shape
    var shapeGroup = thisLayer.property("Contents").addProperty("ADBE Vector Group");
    shapeGroup.name = "Bar";
    var pathGroup  = thisLayer.property("Contents").property("Bar").property("Contents").addProperty("ADBE Vector Shape - Rect");
    var fillGroup  = thisLayer.property("Contents").property("Bar").property("Contents").addProperty("ADBE Vector Graphic - Fill");
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Size").expression = "x = thisComp.layer(\"NULL - GLOBAL CONTROLLER\").effect(\"Global Bar Width\")(\"Slider\");\ny = 800;\nvalue = [x, y];";
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Position").setValue([0, barH/2]);
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Roundness").setValue([barW/2]);
    thisLayer.property("Contents").property("Bar").property("Contents").property("Fill 1").property("ADBE Vector Fill Color").setValue([1, 1, 1]);

    // Parent to NULL above
    parentLayer = myComp.layer(thisLayer.index - 1);
    thisLayer.parent = parentLayer;
    thisLayer.property("position").setValue([0,0]);
}


// --- RATINGS GRAPH --- //

var ratingsTypes = [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5];

for (var r = 0; r < ratingsTypes.length; r++) {
        // Make Shape for rating
        var newShape = myComp.layers.addShape();
        newShape.name = "RATING " + ratingsTypes[r] + " SHAPE";
        ratingsShapes.push(newShape);
        
        // Make Null for rating
        var newNull = myComp.layers.addNull(); // Create null
        newNull.enabled = false;
        newNull.name = "RATING " + ratingsTypes[r]; // Set null name to correct rating
        newNull.transform.position.dimensionsSeparated = true; // Separate dimensions
        var xPos = (myComp.width / 2) + (barW * r * 3);
        var yPos = myComp.height/2;
        newNull.transform("ADBE Position_0").setValue(xPos); // Set position values
        var myProperty = newNull.transform("ADBE Position_1");
        myProperty.setValueAtTime(0, yPos); // Set position values
        myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD); // Convert to HOLD Keyframe
        ratingsNulls.push(newNull); // Add newNull to yearNulls so we don't have to rely on layer index
}

// ratingsNulls.reverse(); // Reverse order of yearNulls so that 1920 is 0
// ratingsShapes.reverse(); // And yearShapes

// Create shapes for ratings
for (var i = ratingsShapes.length - 1; i >= 0; i--) {
    var thisLayer = ratingsShapes[i];
    // Create and transform shape
    var shapeGroup = thisLayer.property("Contents").addProperty("ADBE Vector Group");
    shapeGroup.name = "Bar";
    var pathGroup  = thisLayer.property("Contents").property("Bar").property("Contents").addProperty("ADBE Vector Shape - Rect");
    var fillGroup  = thisLayer.property("Contents").property("Bar").property("Contents").addProperty("ADBE Vector Graphic - Fill");
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Size").expression = "x = thisComp.layer(\"NULL - GLOBAL CONTROLLER\").effect(\"Global Bar Width\")(\"Slider\");\ny = 800;\nvalue = [x*2, y];";
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Position").setValue([0, barH/2]);
    thisLayer.property("Contents").property("Bar").property("Contents").property("Rectangle Path 1").property("ADBE Vector Rect Roundness").setValue([barW/4]);
    thisLayer.property("Contents").property("Bar").property("Contents").property("Fill 1").property("ADBE Vector Fill Color").setValue([1, 1, 1]);

    // Parent to NULL above
    parentLayer = myComp.layer(thisLayer.index - 1);
    thisLayer.parent = parentLayer;
    thisLayer.property("position").setValue([0,0]);
}

function addGlobalNullTag(name, effectType, effectValueType) {
    var a = globalNull.property("Effects").addProperty(effectType);
    a.name = name;
    globalNull.property("Effects").property(name).property(effectValueType).setValue(0);
}

// Create GLOBAL CONTROLLER NULL
var globalNull = myComp.layers.addNull();
globalNull.name = "NULL - GLOBAL CONTROLLER";
globalNull.label = 11;
var sliderBarWidth = globalNull.property("Effects").addProperty("ADBE Slider Control");
sliderBarWidth.name = "Global Bar Width";
var sliderBarHeight = globalNull.property("Effects").addProperty("ADBE Slider Control");
sliderBarHeight.name = "Global Bar Height";
globalNull.property("Effects").property("Global Bar Width").property("Slider").setValue(barW);
globalNull.property("Effects").property("Global Bar Height").property("Slider").setValue(barHeightUnit);

addGlobalNullTag("-ah-", "ADBE Checkbox Control", "Checkbox");
addGlobalNullTag("-ak-", "ADBE Checkbox Control", "Checkbox");
addGlobalNullTag("-fnw-", "ADBE Checkbox Control", "Checkbox");
addGlobalNullTag("-hm-", "ADBE Checkbox Control", "Checkbox");
addGlobalNullTag("-ho-", "ADBE Checkbox Control", "Checkbox");
addGlobalNullTag("-os-", "ADBE Checkbox Control", "Checkbox");
addGlobalNullTag("-ss-", "ADBE Checkbox Control", "Checkbox");
addGlobalNullTag("-uh-", "ADBE Checkbox Control", "Checkbox");

addGlobalNullTag("isRewatch", "ADBE Checkbox Control", "Checkbox");
addGlobalNullTag("diaryEntryYear", "ADBE Slider Control", "Slider");
addGlobalNullTag("diaryEntryRating", "ADBE Slider Control", "Slider");

addGlobalNullTag("diaryEntryLang", "ADBE Slider Control", "Slider");
addGlobalNullTag("lang-en-count", "ADBE Slider Control", "Slider")
addGlobalNullTag("lang-ja-count", "ADBE Slider Control", "Slider")
addGlobalNullTag("lang-fr-count", "ADBE Slider Control", "Slider")
addGlobalNullTag("lang-other-count", "ADBE Slider Control", "Slider")

addGlobalNullTag("genre-action", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-adventure", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-animation", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-comedy", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-crime", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-documentary", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-drama", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-family", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-fantasy", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-history", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-horror", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-music", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-mystery", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-romance", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-sciencefiction", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-tvmovie", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-thriller", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-war", "ADBE Slider Control", "Slider");
addGlobalNullTag("genre-western", "ADBE Slider Control", "Slider");

function tagKeyframe(thisTag, tag) {
    if (thisTag.indexOf(tag) > -1) {
        globalNull.property("Effects").property(tag).property("Checkbox").setValueAtTime(frame, 1);
        globalNull.property("Effects").property(tag).property("Checkbox").setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);
    } else {
        globalNull.property("Effects").property(tag).property("Checkbox").setValueAtTime(frame, 0);
        globalNull.property("Effects").property(tag).property("Checkbox").setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);      
    }
}

function incrementKeyframeVal(propertyPath) {
    myProperty = propertyPath;
    myPropertyVal = myProperty.valueAtTime(i, true);
    var newKeyframeVal = myPropertyVal + 1;
    myProperty.setValueAtTime(frame, newKeyframeVal);
    myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);
}

// Loop through diaryListYear
for (var i = 0; i < diaryListYear.length; i++) {
    var frame = i * myComp.frameDuration;
    if (diaryListYear[i] != "0") {
        // If the entry is not a rewatch, add a keyframe and increment yPos
        var thisYear = diaryListYear[i]; // The year value from the diary
        //alert("New watch at frame 0" + i + " for thisYear " + thisYear);
        var yearIndex = thisYear - 1920; // 
        var yearEntryNull = yearEntriesNulls[yearIndex];
        // Set new value on yearEntriesNull=
        myProperty = yearEntryNull.transform("ADBE Position_1");
        myPropertyVal = myProperty.valueAtTime(i, true);
        var newKeyframeVal = myPropertyVal - barHeightUnit;
        myProperty.setValueAtTime(frame, newKeyframeVal);
        myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);
        globalNull.property("Effects").property("diaryEntryYear").property("Slider").setValueAtTime(frame, diaryListYear[i]); // Set value on GLOBAL VALUE diaryListYear
        if (diaryListRewatch[i] == 1) {
            globalNull.property("Effects").property("isRewatch").property("Checkbox").setValueAtTime(frame, 1); // Set value on GLOBAL VALUE isRewatch
        } else {
            globalNull.property("Effects").property("isRewatch").property("Checkbox").setValueAtTime(frame, 0);
        }
        
        // Apply rating to ratingsBars
        thisRating = diaryListRating[i];
        thisRatingNull = ratingsNulls[thisRating*2];
        globalNull.property("Effects").property("diaryEntryRating").property("Slider").setValueAtTime(frame, thisRating); // Set value on GLOBAL VALUE diaryListRating
        myProperty = thisRatingNull.transform("ADBE Position_1");
        myPropertyVal = myProperty.valueAtTime(i, true);
        var newKeyframeVal = myPropertyVal - .5;
        myProperty.setValueAtTime(frame, newKeyframeVal);
        myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);

        // Apply language to NULL - GLOBAL CONTROLLER
        thisLang = diaryListLang[i];
        langVal = 0;
        // alert(diaryListTitles[i] + " is " + diaryListLang[i]);
        if (thisLang == "en") {
            langVal = 1; // English
            myProperty = globalNull.property("Effects").property("lang-en-count").property("Slider");
            myPropertyVal = myProperty.valueAtTime(i, true);
            var newKeyframeVal = myPropertyVal + 1;
            myProperty.setValueAtTime(frame, newKeyframeVal);
            myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);
        } else if (thisLang == "ja") {
            langVal = 2; // Japanese
            myProperty = globalNull.property("Effects").property("lang-ja-count").property("Slider");
            myPropertyVal = myProperty.valueAtTime(i, true);
            var newKeyframeVal = myPropertyVal + 1;
            myProperty.setValueAtTime(frame, newKeyframeVal);
            myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);
        } else if (thisLang == "fr") {
            langVal = 3; // French
            myProperty = globalNull.property("Effects").property("lang-fr-count").property("Slider");
            myPropertyVal = myProperty.valueAtTime(i, true);
            var newKeyframeVal = myPropertyVal + 1;
            myProperty.setValueAtTime(frame, newKeyframeVal);
            myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);
        } else {
            langVal = 4; // Other
            myProperty = globalNull.property("Effects").property("lang-other-count").property("Slider");
            myPropertyVal = myProperty.valueAtTime(i, true);
            var newKeyframeVal = myPropertyVal + 1;
            myProperty.setValueAtTime(frame, newKeyframeVal);
            myProperty.setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);
        }

        // Apply lang to GLOBAL NULL
        globalNull.property("Effects").property("diaryEntryLang").property("Slider").setValueAtTime(frame, langVal);
        globalNull.property("Effects").property("diaryEntryLang").property("Slider").setInterpolationTypeAtKey(1, KeyframeInterpolationType.HOLD);

        // Apply tags to NULL - GLOBAL CONTROLLER
        thisTag = diaryListTags[i];
        tagKeyframe(thisTag, "-ss-");
        tagKeyframe(thisTag, "-ak-");
        tagKeyframe(thisTag, "-ah-");
        tagKeyframe(thisTag, "-hm-");
        tagKeyframe(thisTag, "-fnw-");
        tagKeyframe(thisTag, "-ho-");
        tagKeyframe(thisTag, "-uh-");
        tagKeyframe(thisTag, "-os-");

        // {"id":28,"name":"Action"},
        // {"id":12,"name":"Adventure"},
        // {"id":16,"name":"Animation"},
        // {"id":35,"name":"Comedy"},
        // {"id":80,"name":"Crime"},
        // {"id":99,"name":"Documentary"},
        // {"id":18,"name":"Drama"},
        // {"id":10751,"name":"Family"},
        // {"id":14,"name":"Fantasy"},
        // {"id":36,"name":"History"},
        // {"id":27,"name":"Horror"},
        // {"id":10402,"name":"Music"},
        // {"id":9648,"name":"Mystery"},
        // {"id":10749,"name":"Romance"},
        // {"id":878,"name":"Science Fiction"},
        // {"id":10770,"name":"TV Movie"},
        // {"id":53,"name":"Thriller"},
        // {"id":10752,"name":"War"},
        // {"id":37,"name":"Western"}

        // Check genres and apply keyframes
        thisGenreIDArray = diaryListGenre[i];
        
        for (var g = 0; g < thisGenreIDArray.length; g++) {
            var thisGenreID = thisGenreIDArray[g];

            if (thisGenreID == 28) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-action").property("Slider"));
            } else if (thisGenreID == 12) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-adventure").property("Slider"));
            } else if (thisGenreID == 16) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-animation").property("Slider"));
            } else if (thisGenreID == 35) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-comedy").property("Slider"));
            } else if (thisGenreID == 80) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-crime").property("Slider"));
            } else if (thisGenreID == 99) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-documentary").property("Slider"));
            } else if (thisGenreID == 18) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-drama").property("Slider"));
            } else if (thisGenreID == 10751) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-family").property("Slider"));
            } else if (thisGenreID == 14) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-fantasy").property("Slider"));
            } else if (thisGenreID == 36) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-history").property("Slider"));
            } else if (thisGenreID == 27) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-horror").property("Slider"));
            } else if (thisGenreID == 10402) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-music").property("Slider"));
            } else if (thisGenreID == 9648) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-mystery").property("Slider"));
            } else if (thisGenreID == 10749) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-romance").property("Slider"));
            } else if (thisGenreID == 878) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-sciencefiction").property("Slider"));
            } else if (thisGenreID == 10770) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-tvmovie").property("Slider"));
            } else if (thisGenreID == 53) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-thriller").property("Slider"));
            } else if (thisGenreID == 10752) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-war").property("Slider"));
            } else if (thisGenreID = 37) {
                incrementKeyframeVal(globalNull.property("Effects").property("genre-western").property("Slider"));
            }
        }

    } else if (diaryListYear[i] == "0") {
        globalNull.property("Effects").property("diaryEntryYear").property("Slider").setValueAtTime(frame, 0);
        // globalNull.property("Effects").property("diaryEntryRating").property("Slider").setValueAtTime(frame, 0);
    }
}

// NOTE --- The rest of the code converts the diaryListTitles (the titles of the movies) to sourceText keyframes for a text object. This takes a few hours, so only uncomment this section when you need to update the text object
/*

// Create TITLES DISPLAY TEXT OBJECT
var titlesTextLayer = myComp.layers.addText();
titlesTextLayer.name = "TEXT - TITLES";
titlesTextLayer.label = 11;
var titlesSourceText = titlesTextLayer.property("Text").property("Source Text");
titlesTextLayer.property("position").setValue([237.2, 519.6]);

for (var i = 0; i < diaryListTitles.length; i++) {
    frame = i * myComp.frameDuration;
    if (diaryListTitles[i] !== " ") {
        // If the diary entry is not blank, write the diary entry as a source text keyframe
        titlesSourceText.setValueAtTime(frame, diaryListTitles[i]);
        var textDocument = new TextDocument("NEW TEXT");
        titlesTextLayer.property("Source Text").setValueAtTime(frame, textDocument);

        textDocument = titlesSourceText.value;
        textDocument.resetCharStyle();
        textDocument.resetParagraphStyle();
        textDocument.fontSize = 32
        textDocument.fillColor = [1, 1, 1];
        textDocument.font = "TiemposText-Semibold";
        textDocument.appyStroke = false;
        textDocument.applyFill = true;
        textDocument.text = diaryListTitles[i];
        textDocument.justification = ParagraphJustification.LEFT_JUSTIFY;
        textDocument.tracking = 0;

        titlesSourceText.setValueAtTime(frame, textDocument)
    } else {
    //     titlesSourceText.setValueAtTime(frame, "");
    }
}

*/